{"Timestamp":"2025-01-19T22:51:07.2398089+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"10","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:07.2746801+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"8","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:07.2928752+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"12","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:16.5873074+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:16.6190415+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"8","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:16.6256096+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.3959870+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4195647+02:00","Level":"Information","MessageTemplate":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","Properties":{"EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:51:32.4338172+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"13","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4789248+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4860919+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4879412+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4904748+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:51:32.4969483+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250119205123_changeIdToGuid","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:51:32.5322164+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.6670514+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"8","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.6897644+02:00","Level":"Information","MessageTemplate":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","Properties":{"EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:52:10.7023235+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.7326991+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.7395968+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.7410206+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.7460965+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:10.7524575+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250119205123_changeIdToGuid","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:52:10.7896258+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:34.7545605+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:34.7861744+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:34.7928500+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:54.9927027+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0163807+02:00","Level":"Information","MessageTemplate":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","Properties":{"EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:52:55.0295221+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0603668+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0670489+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0687494+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0733857+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:52:55.0800485+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250119205123_changeIdToGuid","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:52:55.1224615+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.4991135+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"369","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\r\n","commandText":"CREATE DATABASE [StoreDB];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.6602402+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"139","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\r\n","commandText":"IF SERVERPROPERTY('EngineEdition') <> 5\r\nBEGIN\r\n    ALTER DATABASE [StoreDB] SET READ_COMMITTED_SNAPSHOT ON;\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.6775710+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.6793455+02:00","Level":"Information","MessageTemplate":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","Properties":{"EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:58:47.6954601+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"15","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.7349873+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"14","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.7423136+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.7440707+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.7587562+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"14","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.7652295+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250102222818_InitialMigration","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:58:47.8458796+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Brands] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(100) NOT NULL,\r\n    [LogoPath] nvarchar(500) NULL,\r\n    CONSTRAINT [PK_Brands] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8529400+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Categories] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(100) NOT NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [ParentCategoryId] int NULL,\r\n    CONSTRAINT [PK_Categories] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Categories_Categories_ParentCategoryId] FOREIGN KEY ([ParentCategoryId]) REFERENCES [Categories] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8573595+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Coupons] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    [Description] nvarchar(250) NULL,\r\n    [Code] nvarchar(30) NOT NULL,\r\n    CONSTRAINT [PK_Coupons] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8613864+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [DiscountTypes] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    CONSTRAINT [PK_DiscountTypes] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8652316+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Governorates] (\r\n    [Id] int NOT NULL,\r\n    [NameAr] nvarchar(50) NOT NULL,\r\n    [NameEn] nvarchar(50) NOT NULL,\r\n    CONSTRAINT [PK_Governorates] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8700878+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductAttributes] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(30) NOT NULL,\r\n    [DataType] int NOT NULL,\r\n    CONSTRAINT [PK_ProductAttributes] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8744386+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Roles] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(30) NOT NULL,\r\n    CONSTRAINT [PK_Roles] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8789510+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Users] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [FirstName] nvarchar(50) NOT NULL,\r\n    [LastName] nvarchar(50) NOT NULL,\r\n    [Email] nvarchar(50) NOT NULL,\r\n    [EmailConfirmed] bit NOT NULL,\r\n    [PasswordHashed] nvarchar(128) NOT NULL,\r\n    [PhoneNumber] nvarchar(11) NOT NULL,\r\n    [PhoneNumberConfirmed] bit NOT NULL,\r\n    [LockoutEnd] datetime2 NULL,\r\n    [LockoutEnabled] bit NOT NULL,\r\n    [AccessFailedCount] int NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [IsDeleted] bit NOT NULL,\r\n    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8840282+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Cities] (\r\n    [Id] int NOT NULL,\r\n    [NameAr] nvarchar(50) NOT NULL,\r\n    [NameEn] nvarchar(50) NOT NULL,\r\n    [GovernorateId] int NOT NULL,\r\n    CONSTRAINT [PK_Cities] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Cities_Governorates_GovernorateId] FOREIGN KEY ([GovernorateId]) REFERENCES [Governorates] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.8890693+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Orders] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [UserId] int NOT NULL,\r\n    [OrderDate] datetime2 NOT NULL,\r\n    [TotalAmount] decimal(10,2) NOT NULL,\r\n    [Status] int NOT NULL,\r\n    CONSTRAINT [PK_Orders] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Orders_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:47.9000376+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"11","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Products] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Name] nvarchar(500) NOT NULL,\r\n    [Description] nvarchar(max) NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [BrandId] int NOT NULL,\r\n    [CategoryId] int NOT NULL,\r\n    [CreatedByUserId] int NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [LastModifiedByUserId] int NULL,\r\n    [LastModifiedOn] datetime2 NULL,\r\n    CONSTRAINT [PK_Products] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Products_Brands_BrandId] FOREIGN KEY ([BrandId]) REFERENCES [Brands] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Products_Categories_CategoryId] FOREIGN KEY ([CategoryId]) REFERENCES [Categories] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Products_Users_CreatedByUserId] FOREIGN KEY ([CreatedByUserId]) REFERENCES [Users] ([Id]),\r\n    CONSTRAINT [FK_Products_Users_LastModifiedByUserId] FOREIGN KEY ([LastModifiedByUserId]) REFERENCES [Users] ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6103260+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [RefreshTokens] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [Token] nvarchar(100) NOT NULL,\r\n    [ExpiresOn] datetime2 NOT NULL,\r\n    [IsUsed] bit NOT NULL,\r\n    [IsRevoked] bit NOT NULL,\r\n    [UserId] int NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [CreatedByIp] nvarchar(50) NULL,\r\n    [RevokedByIp] nvarchar(50) NULL,\r\n    CONSTRAINT [PK_RefreshTokens] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_RefreshTokens_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6162509+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ShoppingCarts] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [UserId] int NOT NULL,\r\n    CONSTRAINT [PK_ShoppingCarts] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ShoppingCarts_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6220791+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [UserRoles] (\r\n    [UserId] int NOT NULL,\r\n    [RoleId] int NOT NULL,\r\n    [AssignedOn] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_UserRoles] PRIMARY KEY ([UserId], [RoleId]),\r\n    CONSTRAINT [FK_UserRoles_Roles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [Roles] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_UserRoles_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6272256+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [WishLisits] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [UserId] int NOT NULL,\r\n    CONSTRAINT [PK_WishLisits] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_WishLisits_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6334165+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Addresses] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [UserId] int NOT NULL,\r\n    [CityId] int NOT NULL,\r\n    [PostalCode] nvarchar(max) NOT NULL,\r\n    [AddressDetails] nvarchar(500) NOT NULL,\r\n    CONSTRAINT [PK_Addresses] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Addresses_Cities_CityId] FOREIGN KEY ([CityId]) REFERENCES [Cities] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Addresses_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6379115+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Payments] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [OrderId] int NOT NULL,\r\n    [Amount] decimal(10,2) NOT NULL,\r\n    [Method] int NOT NULL,\r\n    [Status] int NOT NULL,\r\n    [PaymentDate] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_Payments] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Payments_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:48.6450181+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductInventories] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [ProductId] int NOT NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [IsDigital] bit NOT NULL,\r\n    [Price] decimal(10,2) NOT NULL,\r\n    [Weight] real NOT NULL,\r\n    [UnitsInStock] int NOT NULL,\r\n    [CreatedByUserId] int NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [LastModifiedByUserId] int NULL,\r\n    [LastModifiedOn] datetime2 NULL,\r\n    CONSTRAINT [PK_ProductInventories] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ProductInventories_Products_ProductId] FOREIGN KEY ([ProductId]) REFERENCES [Products] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_ProductInventories_Users_CreatedByUserId] FOREIGN KEY ([CreatedByUserId]) REFERENCES [Users] ([Id]),\r\n    CONSTRAINT [FK_ProductInventories_Users_LastModifiedByUserId] FOREIGN KEY ([LastModifiedByUserId]) REFERENCES [Users] ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8159482+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Reviews] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [ProductId] int NOT NULL,\r\n    [UserId] int NOT NULL,\r\n    [Comment] nvarchar(1000) NULL,\r\n    [Rating] tinyint NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Reviews_Products_ProductId] FOREIGN KEY ([ProductId]) REFERENCES [Products] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8224634+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Shippings] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [OrderId] int NOT NULL,\r\n    [AddressId] int NOT NULL,\r\n    [Status] int NOT NULL,\r\n    [Method] int NOT NULL,\r\n    [ShippedDate] datetime2 NOT NULL,\r\n    [DeliveryDate] datetime2 NULL,\r\n    CONSTRAINT [PK_Shippings] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Shippings_Addresses_AddressId] FOREIGN KEY ([AddressId]) REFERENCES [Addresses] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Shippings_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8317230+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Discounts] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [ProductInventoryId] int NOT NULL,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    [DiscountValue] int NOT NULL,\r\n    [Start] datetime2 NOT NULL,\r\n    [End] datetime2 NOT NULL,\r\n    [IsActive] bit NOT NULL DEFAULT CAST(1 AS bit),\r\n    [DiscountTypeId] int NOT NULL,\r\n    [CouponId] int NULL,\r\n    CONSTRAINT [PK_Discounts] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Discounts_Coupons_CouponId] FOREIGN KEY ([CouponId]) REFERENCES [Coupons] ([Id]),\r\n    CONSTRAINT [FK_Discounts_DiscountTypes_DiscountTypeId] FOREIGN KEY ([DiscountTypeId]) REFERENCES [DiscountTypes] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_Discounts_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8375924+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [OrderItems] (\r\n    [OrderId] int NOT NULL,\r\n    [ProductInventoryId] int NOT NULL,\r\n    [Quantity] int NOT NULL,\r\n    [Price] decimal(10,2) NOT NULL,\r\n    CONSTRAINT [PK_OrderItems] PRIMARY KEY ([OrderId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_OrderItems_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_OrderItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8440475+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductAttributeValues] (\r\n    [AttributeId] int NOT NULL,\r\n    [ProductInventoryId] int NOT NULL,\r\n    [value] nvarchar(255) NOT NULL,\r\n    CONSTRAINT [PK_ProductAttributeValues] PRIMARY KEY ([ProductInventoryId], [AttributeId]),\r\n    CONSTRAINT [FK_ProductAttributeValues_ProductAttributes_AttributeId] FOREIGN KEY ([AttributeId]) REFERENCES [ProductAttributes] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_ProductAttributeValues_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:51.8498447+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductInventoryImages] (\r\n    [Id] int NOT NULL IDENTITY,\r\n    [ProductInventoryId] int NOT NULL,\r\n    [ImagePath] nvarchar(255) NULL,\r\n    [DisplayOreder] int NOT NULL,\r\n    CONSTRAINT [PK_ProductInventoryImages] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ProductInventoryImages_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:54.5673003+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ShoppingCartItems] (\r\n    [ShoppingCartId] int NOT NULL,\r\n    [ProductInventoryId] int NOT NULL,\r\n    [Quantity] int NOT NULL,\r\n    CONSTRAINT [PK_ShoppingCartItems] PRIMARY KEY ([ShoppingCartId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_ShoppingCartItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_ShoppingCartItems_ShoppingCarts_ShoppingCartId] FOREIGN KEY ([ShoppingCartId]) REFERENCES [ShoppingCarts] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:54.5728763+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [WishListItems] (\r\n    [WishListId] int NOT NULL,\r\n    [ProductInventoryId] int NOT NULL,\r\n    CONSTRAINT [PK_WishListItems] PRIMARY KEY ([WishListId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_WishListItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_WishListItems_WishLisits_WishListId] FOREIGN KEY ([WishListId]) REFERENCES [WishLisits] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:54.6542789+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"81","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'NameAr', N'NameEn') AND [object_id] = OBJECT_ID(N'[Governorates]'))\r\n    SET IDENTITY_INSERT [Governorates] ON;\r\nINSERT INTO [Governorates] ([Id], [NameAr], [NameEn])\r\nVALUES (1, N'القاهرة', N'Cairo'),\r\n(2, N'الجيزة', N'Giza'),\r\n(3, N'الأسكندرية', N'Alexandria'),\r\n(4, N'الدقهلية', N'Dakahlia'),\r\n(5, N'البحر الأحمر', N'Red Sea'),\r\n(6, N'البحيرة', N'Beheira'),\r\n(7, N'الفيوم', N'Fayoum'),\r\n(8, N'الغربية', N'Gharbiya'),\r\n(9, N'الإسماعلية', N'Ismailia'),\r\n(10, N'المنوفية', N'Menofia'),\r\n(11, N'المنيا', N'Minya'),\r\n(12, N'القليوبية', N'Qaliubiya'),\r\n(13, N'الوادي الجديد', N'New Valley'),\r\n(14, N'السويس', N'Suez'),\r\n(15, N'اسوان', N'Aswan'),\r\n(16, N'اسيوط', N'Assiut'),\r\n(17, N'بني سويف', N'Beni Suef'),\r\n(18, N'بورسعيد', N'Port Said'),\r\n(19, N'دمياط', N'Damietta'),\r\n(20, N'الشرقية', N'Sharkia'),\r\n(21, N'جنوب سيناء', N'South Sinai'),\r\n(22, N'كفر الشيخ', N'Kafr Al sheikh'),\r\n(23, N'مطروح', N'Matrouh'),\r\n(24, N'الأقصر', N'Luxor'),\r\n(25, N'قنا', N'Qena'),\r\n(26, N'شمال سيناء', N'North Sinai'),\r\n(27, N'سوهاج', N'Sohag');\r\nIF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'NameAr', N'NameEn') AND [object_id] = OBJECT_ID(N'[Governorates]'))\r\n    SET IDENTITY_INSERT [Governorates] OFF;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:54.6882300+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"34","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Name') AND [object_id] = OBJECT_ID(N'[Roles]'))\r\n    SET IDENTITY_INSERT [Roles] ON;\r\nINSERT INTO [Roles] ([Id], [Name])\r\nVALUES (1, N'Administrator'),\r\n(2, N'Customer');\r\nIF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Name') AND [object_id] = OBJECT_ID(N'[Roles]'))\r\n    SET IDENTITY_INSERT [Roles] OFF;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:54.7286322+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"40","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'CreatedOn', N'Email', N'EmailConfirmed', N'FirstName', N'IsDeleted', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'PasswordHashed', N'PhoneNumber', N'PhoneNumberConfirmed') AND [object_id] = OBJECT_ID(N'[Users]'))\r\n    SET IDENTITY_INSERT [Users] ON;\r\nINSERT INTO [Users] ([Id], [AccessFailedCount], [CreatedOn], [Email], [EmailConfirmed], [FirstName], [IsDeleted], [LastName], [LockoutEnabled], [LockoutEnd], [PasswordHashed], [PhoneNumber], [PhoneNumberConfirmed])\r\nVALUES (1, 0, '2025-01-02T00:00:00.0000000Z', N'admin@example.com', CAST(0 AS bit), N'Saman', CAST(0 AS bit), N'Kaream', CAST(0 AS bit), NULL, N'123', N'', CAST(0 AS bit)),\r\n(2, 0, '2025-01-02T00:00:00.0000000Z', N'customer@example.com', CAST(0 AS bit), N'Sherif', CAST(0 AS bit), N'Ali', CAST(0 AS bit), NULL, N'123', N'', CAST(0 AS bit));\r\nIF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'AccessFailedCount', N'CreatedOn', N'Email', N'EmailConfirmed', N'FirstName', N'IsDeleted', N'LastName', N'LockoutEnabled', N'LockoutEnd', N'PasswordHashed', N'PhoneNumber', N'PhoneNumberConfirmed') AND [object_id] = OBJECT_ID(N'[Users]'))\r\n    SET IDENTITY_INSERT [Users] OFF;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:58:57.0492947+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"209","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'GovernorateId', N'NameAr', N'NameEn') AND [object_id] = OBJECT_ID(N'[Cities]'))\r\n    SET IDENTITY_INSERT [Cities] ON;\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (1, 1, N'15 مايو', N'15 May'),\r\n(2, 1, N'الازبكية', N'Al Azbakeyah'),\r\n(3, 1, N'البساتين', N'Al Basatin'),\r\n(4, 1, N'التبين', N'Tebin'),\r\n(5, 1, N'الخليفة', N'El-Khalifa'),\r\n(6, 1, N'الدراسة', N'El darrasa'),\r\n(7, 1, N'الدرب الاحمر', N'Aldarb Alahmar'),\r\n(8, 1, N'الزاوية الحمراء', N'Zawya al-Hamra'),\r\n(9, 1, N'الزيتون', N'El-Zaytoun'),\r\n(10, 1, N'الساحل', N'Sahel'),\r\n(11, 1, N'السلام', N'El Salam'),\r\n(12, 1, N'السيدة زينب', N'Sayeda Zeinab'),\r\n(13, 1, N'الشرابية', N'El Sharabeya'),\r\n(14, 1, N'مدينة الشروق', N'Shorouk'),\r\n(15, 1, N'الظاهر', N'El Daher'),\r\n(16, 1, N'العتبة', N'Ataba'),\r\n(17, 1, N'القاهرة الجديدة', N'New Cairo'),\r\n(18, 1, N'المرج', N'El Marg'),\r\n(19, 1, N'عزبة النخل', N'Ezbet el Nakhl'),\r\n(20, 1, N'المطرية', N'Matareya'),\r\n(21, 1, N'المعادى', N'Maadi'),\r\n(22, 1, N'المعصرة', N'Maasara'),\r\n(23, 1, N'المقطم', N'Mokattam'),\r\n(24, 1, N'المنيل', N'Manyal'),\r\n(25, 1, N'الموسكى', N'Mosky'),\r\n(26, 1, N'النزهة', N'Nozha'),\r\n(27, 1, N'الوايلى', N'Waily'),\r\n(28, 1, N'باب الشعرية', N'Bab al-Shereia'),\r\n(29, 1, N'بولاق', N'Bolaq'),\r\n(30, 1, N'جاردن سيتى', N'Garden City'),\r\n(31, 1, N'حدائق القبة', N'Hadayek El-Kobba'),\r\n(32, 1, N'حلوان', N'Helwan'),\r\n(33, 1, N'دار السلام', N'Dar Al Salam'),\r\n(34, 1, N'شبرا', N'Shubra'),\r\n(35, 1, N'طره', N'Tura'),\r\n(36, 1, N'عابدين', N'Abdeen'),\r\n(37, 1, N'عباسية', N'Abaseya'),\r\n(38, 1, N'عين شمس', N'Ain Shams'),\r\n(39, 1, N'مدينة نصر', N'Nasr City'),\r\n(40, 1, N'مصر الجديدة', N'New Heliopolis'),\r\n(41, 1, N'مصر القديمة', N'Masr Al Qadima'),\r\n(42, 1, N'منشية ناصر', N'Mansheya Nasir');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (43, 1, N'مدينة بدر', N'Badr City'),\r\n(44, 1, N'مدينة العبور', N'Obour City'),\r\n(45, 1, N'وسط البلد', N'Cairo Downtown'),\r\n(46, 1, N'الزمالك', N'Zamalek'),\r\n(47, 1, N'قصر النيل', N'Kasr El Nile'),\r\n(48, 1, N'الرحاب', N'Rehab'),\r\n(49, 1, N'القطامية', N'Katameya'),\r\n(50, 1, N'مدينتي', N'Madinty'),\r\n(51, 1, N'روض الفرج', N'Rod Alfarag'),\r\n(52, 1, N'شيراتون', N'Sheraton'),\r\n(53, 1, N'الجمالية', N'El-Gamaleya'),\r\n(54, 1, N'العاشر من رمضان', N'10th of Ramadan City'),\r\n(55, 1, N'الحلمية', N'Helmeyat Alzaytoun'),\r\n(56, 1, N'النزهة الجديدة', N'New Nozha'),\r\n(57, 1, N'العاصمة الإدارية', N'Capital New'),\r\n(58, 2, N'الجيزة', N'Giza'),\r\n(59, 2, N'السادس من أكتوبر', N'Sixth of October'),\r\n(60, 2, N'الشيخ زايد', N'Cheikh Zayed'),\r\n(61, 2, N'الحوامدية', N'Hawamdiyah'),\r\n(62, 2, N'البدرشين', N'Al Badrasheen'),\r\n(63, 2, N'الصف', N'Saf'),\r\n(64, 2, N'أطفيح', N'Atfih'),\r\n(65, 2, N'العياط', N'Al Ayat'),\r\n(66, 2, N'الباويطي', N'Al-Bawaiti'),\r\n(67, 2, N'منشأة القناطر', N'ManshiyetAl Qanater'),\r\n(68, 2, N'أوسيم', N'Oaseem'),\r\n(69, 2, N'كرداسة', N'Kerdasa'),\r\n(70, 2, N'أبو النمرس', N'Abu Nomros'),\r\n(71, 2, N'كفر غطاطي', N'Kafr Ghati'),\r\n(72, 2, N'منشأة البكاري', N'Manshiyet Al Bakari'),\r\n(73, 2, N'الدقى', N'Dokki'),\r\n(74, 2, N'العجوزة', N'Agouza'),\r\n(75, 2, N'الهرم', N'Haram'),\r\n(76, 2, N'الوراق', N'Warraq'),\r\n(77, 2, N'امبابة', N'Imbaba'),\r\n(78, 2, N'بولاق الدكرور', N'Boulaq Dakrour'),\r\n(79, 2, N'الواحات البحرية', N'Al Wahat Al Baharia'),\r\n(80, 2, N'العمرانية', N'Omraneya'),\r\n(81, 2, N'المنيب', N'Moneeb'),\r\n(82, 2, N'بين السرايات', N'Bin Alsarayat'),\r\n(83, 2, N'الكيت كات', N'Kit Kat'),\r\n(84, 2, N'المهندسين', N'Mohandessin');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (85, 2, N'فيصل', N'Faisal'),\r\n(86, 2, N'أبو رواش', N'Abu Rawash'),\r\n(87, 2, N'حدائق الأهرام', N'Hadayek Alahram'),\r\n(88, 2, N'الحرانية', N'Haraneya'),\r\n(89, 2, N'حدائق اكتوبر', N'Hadayek October'),\r\n(90, 2, N'صفط اللبن', N'Saft Allaban'),\r\n(91, 2, N'القرية الذكية', N'Smart Village'),\r\n(92, 2, N'ارض اللواء', N'Ard Ellwaa'),\r\n(93, 3, N'ابو قير', N'Abu Qir'),\r\n(94, 3, N'الابراهيمية', N'Al Ibrahimeyah'),\r\n(95, 3, N'الأزاريطة', N'Azarita'),\r\n(96, 3, N'الانفوشى', N'Anfoushi'),\r\n(97, 3, N'الدخيلة', N'Dekheila'),\r\n(98, 3, N'السيوف', N'El Soyof'),\r\n(99, 3, N'العامرية', N'Ameria'),\r\n(100, 3, N'اللبان', N'El Labban'),\r\n(101, 3, N'المفروزة', N'Al Mafrouza'),\r\n(102, 3, N'المنتزه', N'El Montaza'),\r\n(103, 3, N'المنشية', N'Mansheya'),\r\n(104, 3, N'الناصرية', N'Naseria'),\r\n(105, 3, N'امبروزو', N'Ambrozo'),\r\n(106, 3, N'باب شرق', N'Bab Sharq'),\r\n(107, 3, N'برج العرب', N'Bourj Alarab'),\r\n(108, 3, N'ستانلى', N'Stanley'),\r\n(109, 3, N'سموحة', N'Smouha'),\r\n(110, 3, N'سيدى بشر', N'Sidi Bishr'),\r\n(111, 3, N'شدس', N'Shads'),\r\n(112, 3, N'غيط العنب', N'Gheet Alenab'),\r\n(113, 3, N'فلمينج', N'Fleming'),\r\n(114, 3, N'فيكتوريا', N'Victoria'),\r\n(115, 3, N'كامب شيزار', N'Camp Shizar'),\r\n(116, 3, N'كرموز', N'Karmooz'),\r\n(117, 3, N'محطة الرمل', N'Mahta Alraml'),\r\n(118, 3, N'مينا البصل', N'Mina El-Basal'),\r\n(119, 3, N'العصافرة', N'Asafra'),\r\n(120, 3, N'العجمي', N'Agamy'),\r\n(121, 3, N'بكوس', N'Bakos'),\r\n(122, 3, N'بولكلي', N'Boulkly'),\r\n(123, 3, N'كليوباترا', N'Cleopatra'),\r\n(124, 3, N'جليم', N'Glim'),\r\n(125, 3, N'المعمورة', N'Al Mamurah'),\r\n(126, 3, N'المندرة', N'Al Mandara');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (127, 3, N'محرم بك', N'Moharam Bek'),\r\n(128, 3, N'الشاطبي', N'Elshatby'),\r\n(129, 3, N'سيدي جابر', N'Sidi Gaber'),\r\n(130, 3, N'الساحل الشمالي', N'North Coast/sahel'),\r\n(131, 3, N'الحضرة', N'Alhadra'),\r\n(132, 3, N'العطارين', N'Alattarin'),\r\n(133, 3, N'سيدي كرير', N'Sidi Kerir'),\r\n(134, 3, N'الجمرك', N'Elgomrok'),\r\n(135, 3, N'المكس', N'Al Max'),\r\n(136, 3, N'مارينا', N'Marina'),\r\n(137, 4, N'المنصورة', N'Mansoura'),\r\n(138, 4, N'طلخا', N'Talkha'),\r\n(139, 4, N'ميت غمر', N'Mitt Ghamr'),\r\n(140, 4, N'دكرنس', N'Dekernes'),\r\n(141, 4, N'أجا', N'Aga'),\r\n(142, 4, N'منية النصر', N'Menia El Nasr'),\r\n(143, 4, N'السنبلاوين', N'Sinbillawin'),\r\n(144, 4, N'الكردي', N'El Kurdi'),\r\n(145, 4, N'بني عبيد', N'Bani Ubaid'),\r\n(146, 4, N'المنزلة', N'Al Manzala'),\r\n(147, 4, N'تمي الأمديد', N'tami al''amdid'),\r\n(148, 4, N'الجمالية', N'aljamalia'),\r\n(149, 4, N'شربين', N'Sherbin'),\r\n(150, 4, N'المطرية', N'Mataria'),\r\n(151, 4, N'بلقاس', N'Belqas'),\r\n(152, 4, N'ميت سلسيل', N'Meet Salsil'),\r\n(153, 4, N'جمصة', N'Gamasa'),\r\n(154, 4, N'محلة دمنة', N'Mahalat Damana'),\r\n(155, 4, N'نبروه', N'Nabroh'),\r\n(156, 5, N'الغردقة', N'Hurghada'),\r\n(157, 5, N'رأس غارب', N'Ras Ghareb'),\r\n(158, 5, N'سفاجا', N'Safaga'),\r\n(159, 5, N'القصير', N'El Qusiar'),\r\n(160, 5, N'مرسى علم', N'Marsa Alam'),\r\n(161, 5, N'الشلاتين', N'Shalatin'),\r\n(162, 5, N'حلايب', N'Halaib'),\r\n(163, 5, N'الدهار', N'Aldahar'),\r\n(164, 6, N'دمنهور', N'Damanhour'),\r\n(165, 6, N'كفر الدوار', N'Kafr El Dawar'),\r\n(166, 6, N'رشيد', N'Rashid'),\r\n(167, 6, N'إدكو', N'Edco'),\r\n(168, 6, N'أبو المطامير', N'Abu al-Matamir');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (169, 6, N'أبو حمص', N'Abu Homs'),\r\n(170, 6, N'الدلنجات', N'Delengat'),\r\n(171, 6, N'المحمودية', N'Mahmoudiyah'),\r\n(172, 6, N'الرحمانية', N'Rahmaniyah'),\r\n(173, 6, N'إيتاي البارود', N'Itai Baroud'),\r\n(174, 6, N'حوش عيسى', N'Housh Eissa'),\r\n(175, 6, N'شبراخيت', N'Shubrakhit'),\r\n(176, 6, N'كوم حمادة', N'Kom Hamada'),\r\n(177, 6, N'بدر', N'Badr'),\r\n(178, 6, N'وادي النطرون', N'Wadi Natrun'),\r\n(179, 6, N'النوبارية الجديدة', N'New Nubaria'),\r\n(180, 6, N'النوبارية', N'Alnoubareya'),\r\n(181, 7, N'الفيوم', N'Fayoum'),\r\n(182, 7, N'الفيوم الجديدة', N'Fayoum El Gedida'),\r\n(183, 7, N'طامية', N'Tamiya'),\r\n(184, 7, N'سنورس', N'Snores'),\r\n(185, 7, N'إطسا', N'Etsa'),\r\n(186, 7, N'إبشواي', N'Epschway'),\r\n(187, 7, N'يوسف الصديق', N'Yusuf El Sediaq'),\r\n(188, 7, N'الحادقة', N'Hadqa'),\r\n(189, 7, N'اطسا', N'Atsa'),\r\n(190, 7, N'الجامعة', N'Algamaa'),\r\n(191, 7, N'السيالة', N'Sayala'),\r\n(192, 8, N'طنطا', N'Tanta'),\r\n(193, 8, N'المحلة الكبرى', N'Al Mahalla Al Kobra'),\r\n(194, 8, N'كفر الزيات', N'Kafr El Zayat'),\r\n(195, 8, N'زفتى', N'Zefta'),\r\n(196, 8, N'السنطة', N'El Santa'),\r\n(197, 8, N'قطور', N'Qutour'),\r\n(198, 8, N'بسيون', N'Basion'),\r\n(199, 8, N'سمنود', N'Samannoud'),\r\n(200, 9, N'الإسماعيلية', N'Ismailia'),\r\n(201, 9, N'فايد', N'Fayed'),\r\n(202, 9, N'القنطرة شرق', N'Qantara Sharq'),\r\n(203, 9, N'القنطرة غرب', N'Qantara Gharb'),\r\n(204, 9, N'التل الكبير', N'El Tal El Kabier'),\r\n(205, 9, N'أبو صوير', N'Abu Sawir'),\r\n(206, 9, N'القصاصين الجديدة', N'Kasasien El Gedida'),\r\n(207, 9, N'نفيشة', N'Nefesha'),\r\n(208, 9, N'الشيخ زايد', N'Sheikh Zayed'),\r\n(209, 10, N'شبين الكوم', N'Shbeen El Koom'),\r\n(210, 10, N'مدينة السادات', N'Sadat City');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (211, 10, N'منوف', N'Menouf'),\r\n(212, 10, N'سرس الليان', N'Sars El-Layan'),\r\n(213, 10, N'أشمون', N'Ashmon'),\r\n(214, 10, N'الباجور', N'Al Bagor'),\r\n(215, 10, N'قويسنا', N'Quesna'),\r\n(216, 10, N'بركة السبع', N'Berkat El Saba'),\r\n(217, 10, N'تلا', N'Tala'),\r\n(218, 10, N'الشهداء', N'Al Shohada'),\r\n(219, 11, N'المنيا', N'Minya'),\r\n(220, 11, N'المنيا الجديدة', N'Minya El Gedida'),\r\n(221, 11, N'العدوة', N'El Adwa'),\r\n(222, 11, N'مغاغة', N'Magagha'),\r\n(223, 11, N'بني مزار', N'Bani Mazar'),\r\n(224, 11, N'مطاي', N'Mattay'),\r\n(225, 11, N'سمالوط', N'Samalut'),\r\n(226, 11, N'المدينة الفكرية', N'Madinat El Fekria'),\r\n(227, 11, N'ملوي', N'Meloy'),\r\n(228, 11, N'دير مواس', N'Deir Mawas'),\r\n(229, 11, N'ابو قرقاص', N'Abu Qurqas'),\r\n(230, 11, N'ارض سلطان', N'Ard Sultan'),\r\n(231, 12, N'بنها', N'Banha'),\r\n(232, 12, N'قليوب', N'Qalyub'),\r\n(233, 12, N'شبرا الخيمة', N'Shubra Al Khaimah'),\r\n(234, 12, N'القناطر الخيرية', N'Al Qanater Charity'),\r\n(235, 12, N'الخانكة', N'Khanka'),\r\n(236, 12, N'كفر شكر', N'Kafr Shukr'),\r\n(237, 12, N'طوخ', N'Tukh'),\r\n(238, 12, N'قها', N'Qaha'),\r\n(239, 12, N'العبور', N'Obour'),\r\n(240, 12, N'الخصوص', N'Khosous'),\r\n(241, 12, N'شبين القناطر', N'Shibin Al Qanater'),\r\n(242, 12, N'مسطرد', N'Mostorod'),\r\n(243, 13, N'الخارجة', N'El Kharga'),\r\n(244, 13, N'باريس', N'Paris'),\r\n(245, 13, N'موط', N'Mout'),\r\n(246, 13, N'الفرافرة', N'Farafra'),\r\n(247, 13, N'بلاط', N'Balat'),\r\n(248, 13, N'الداخلة', N'Dakhla'),\r\n(249, 14, N'السويس', N'Suez'),\r\n(250, 14, N'الجناين', N'Alganayen'),\r\n(251, 14, N'عتاقة', N'Ataqah'),\r\n(252, 14, N'العين السخنة', N'Ain Sokhna');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (253, 14, N'فيصل', N'Faysal'),\r\n(254, 15, N'أسوان', N'Aswan'),\r\n(255, 15, N'أسوان الجديدة', N'Aswan El Gedida'),\r\n(256, 15, N'دراو', N'Drau'),\r\n(257, 15, N'كوم أمبو', N'Kom Ombo'),\r\n(258, 15, N'نصر النوبة', N'Nasr Al Nuba'),\r\n(259, 15, N'كلابشة', N'Kalabsha'),\r\n(260, 15, N'إدفو', N'Edfu'),\r\n(261, 15, N'الرديسية', N'Al-Radisiyah'),\r\n(262, 15, N'البصيلية', N'Al Basilia'),\r\n(263, 15, N'السباعية', N'Al Sibaeia'),\r\n(264, 15, N'ابوسمبل السياحية', N'Abo Simbl Al Siyahia'),\r\n(265, 15, N'مرسى علم', N'Marsa Alam'),\r\n(266, 16, N'أسيوط', N'Assiut'),\r\n(267, 16, N'أسيوط الجديدة', N'Assiut El Gedida'),\r\n(268, 16, N'ديروط', N'Dayrout'),\r\n(269, 16, N'منفلوط', N'Manfalut'),\r\n(270, 16, N'القوصية', N'Qusiya'),\r\n(271, 16, N'أبنوب', N'Abnoub'),\r\n(272, 16, N'أبو تيج', N'Abu Tig'),\r\n(273, 16, N'الغنايم', N'El Ghanaim'),\r\n(274, 16, N'ساحل سليم', N'Sahel Selim'),\r\n(275, 16, N'البداري', N'El Badari'),\r\n(276, 16, N'صدفا', N'Sidfa'),\r\n(277, 17, N'بني سويف', N'Bani Sweif'),\r\n(278, 17, N'بني سويف الجديدة', N'Beni Suef El Gedida'),\r\n(279, 17, N'الواسطى', N'Al Wasta'),\r\n(280, 17, N'ناصر', N'Naser'),\r\n(281, 17, N'إهناسيا', N'Ehnasia'),\r\n(282, 17, N'ببا', N'beba'),\r\n(283, 17, N'الفشن', N'Fashn'),\r\n(284, 17, N'سمسطا', N'Somasta'),\r\n(285, 17, N'الاباصيرى', N'Alabbaseri'),\r\n(286, 17, N'مقبل', N'Mokbel'),\r\n(287, 18, N'بورسعيد', N'PorSaid'),\r\n(288, 18, N'بورفؤاد', N'Port Fouad'),\r\n(289, 18, N'العرب', N'Alarab'),\r\n(290, 18, N'حى الزهور', N'Zohour'),\r\n(291, 18, N'حى الشرق', N'Alsharq'),\r\n(292, 18, N'حى الضواحى', N'Aldawahi'),\r\n(293, 18, N'حى المناخ', N'Almanakh'),\r\n(294, 18, N'حى مبارك', N'Mubarak');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (295, 19, N'دمياط', N'Damietta'),\r\n(296, 19, N'دمياط الجديدة', N'New Damietta'),\r\n(297, 19, N'رأس البر', N'Ras El Bar'),\r\n(298, 19, N'فارسكور', N'Faraskour'),\r\n(299, 19, N'الزرقا', N'Zarqa'),\r\n(300, 19, N'السرو', N'alsaru'),\r\n(301, 19, N'الروضة', N'alruwda'),\r\n(302, 19, N'كفر البطيخ', N'Kafr El-Batikh'),\r\n(303, 19, N'عزبة البرج', N'Azbet Al Burg'),\r\n(304, 19, N'ميت أبو غالب', N'Meet Abou Ghalib'),\r\n(305, 19, N'كفر سعد', N'Kafr Saad'),\r\n(306, 20, N'الزقازيق', N'Zagazig'),\r\n(307, 20, N'العاشر من رمضان', N'Al Ashr Men Ramadan'),\r\n(308, 20, N'منيا القمح', N'Minya Al Qamh'),\r\n(309, 20, N'بلبيس', N'Belbeis'),\r\n(310, 20, N'مشتول السوق', N'Mashtoul El Souq'),\r\n(311, 20, N'القنايات', N'Qenaiat'),\r\n(312, 20, N'أبو حماد', N'Abu Hammad'),\r\n(313, 20, N'القرين', N'El Qurain'),\r\n(314, 20, N'ههيا', N'Hehia'),\r\n(315, 20, N'أبو كبير', N'Abu Kabir'),\r\n(316, 20, N'فاقوس', N'Faccus'),\r\n(317, 20, N'الصالحية الجديدة', N'El Salihia El Gedida'),\r\n(318, 20, N'الإبراهيمية', N'Al Ibrahimiyah'),\r\n(319, 20, N'ديرب نجم', N'Deirb Negm'),\r\n(320, 20, N'كفر صقر', N'Kafr Saqr'),\r\n(321, 20, N'أولاد صقر', N'Awlad Saqr'),\r\n(322, 20, N'الحسينية', N'Husseiniya'),\r\n(323, 20, N'صان الحجر القبلية', N'san alhajar alqablia'),\r\n(324, 20, N'منشأة أبو عمر', N'Manshayat Abu Omar'),\r\n(325, 21, N'الطور', N'Al Toor'),\r\n(326, 21, N'شرم الشيخ', N'Sharm El-Shaikh'),\r\n(327, 21, N'دهب', N'Dahab'),\r\n(328, 21, N'نويبع', N'Nuweiba'),\r\n(329, 21, N'طابا', N'Taba'),\r\n(330, 21, N'سانت كاترين', N'Saint Catherine'),\r\n(331, 21, N'أبو رديس', N'Abu Redis'),\r\n(332, 21, N'أبو زنيمة', N'Abu Zenaima'),\r\n(333, 21, N'رأس سدر', N'Ras Sidr'),\r\n(334, 22, N'كفر الشيخ', N'Kafr El Sheikh'),\r\n(335, 22, N'وسط البلد كفر الشيخ', N'Kafr El Sheikh Downtown'),\r\n(336, 22, N'دسوق', N'Desouq');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (337, 22, N'فوه', N'Fooh'),\r\n(338, 22, N'مطوبس', N'Metobas'),\r\n(339, 22, N'برج البرلس', N'Burg Al Burullus'),\r\n(340, 22, N'بلطيم', N'Baltim'),\r\n(341, 22, N'مصيف بلطيم', N'Masief Baltim'),\r\n(342, 22, N'الحامول', N'Hamol'),\r\n(343, 22, N'بيلا', N'Bella'),\r\n(344, 22, N'الرياض', N'Riyadh'),\r\n(345, 22, N'سيدي سالم', N'Sidi Salm'),\r\n(346, 22, N'قلين', N'Qellen'),\r\n(347, 22, N'سيدي غازي', N'Sidi Ghazi'),\r\n(348, 23, N'مرسى مطروح', N'Marsa Matrouh'),\r\n(349, 23, N'الحمام', N'El Hamam'),\r\n(350, 23, N'العلمين', N'Alamein'),\r\n(351, 23, N'الضبعة', N'Dabaa'),\r\n(352, 23, N'النجيلة', N'Al-Nagila'),\r\n(353, 23, N'سيدي براني', N'Sidi Brani'),\r\n(354, 23, N'السلوم', N'Salloum'),\r\n(355, 23, N'سيوة', N'Siwa'),\r\n(356, 23, N'مارينا', N'Marina'),\r\n(357, 23, N'الساحل الشمالى', N'North Coast'),\r\n(358, 24, N'الأقصر', N'Luxor'),\r\n(359, 24, N'الأقصر الجديدة', N'New Luxor'),\r\n(360, 24, N'إسنا', N'Esna'),\r\n(361, 24, N'طيبة الجديدة', N'New Tiba'),\r\n(362, 24, N'الزينية', N'Al ziynia'),\r\n(363, 24, N'البياضية', N'Al Bayadieh'),\r\n(364, 24, N'القرنة', N'Al Qarna'),\r\n(365, 24, N'أرمنت', N'Armant'),\r\n(366, 24, N'الطود', N'Al Tud'),\r\n(367, 25, N'قنا', N'Qena'),\r\n(368, 25, N'قنا الجديدة', N'New Qena'),\r\n(369, 25, N'ابو طشت', N'Abu Tesht'),\r\n(370, 25, N'نجع حمادي', N'Nag Hammadi'),\r\n(371, 25, N'دشنا', N'Deshna'),\r\n(372, 25, N'الوقف', N'Alwaqf'),\r\n(373, 25, N'قفط', N'Qaft'),\r\n(374, 25, N'نقادة', N'Naqada'),\r\n(375, 25, N'فرشوط', N'Farshout'),\r\n(376, 25, N'قوص', N'Quos'),\r\n(377, 26, N'العريش', N'Arish'),\r\n(378, 26, N'الشيخ زويد', N'Sheikh Zowaid');\r\nINSERT INTO [Cities] ([Id], [GovernorateId], [NameAr], [NameEn])\r\nVALUES (379, 26, N'نخل', N'Nakhl'),\r\n(380, 26, N'رفح', N'Rafah'),\r\n(381, 26, N'بئر العبد', N'Bir al-Abed'),\r\n(382, 26, N'الحسنة', N'Al Hasana'),\r\n(383, 27, N'سوهاج', N'Sohag'),\r\n(384, 27, N'سوهاج الجديدة', N'Sohag El Gedida'),\r\n(385, 27, N'أخميم', N'Akhmeem'),\r\n(386, 27, N'أخميم الجديدة', N'Akhmim El Gedida'),\r\n(387, 27, N'البلينا', N'Albalina'),\r\n(388, 27, N'المراغة', N'El Maragha'),\r\n(389, 27, N'المنشأة', N'almunsha''a'),\r\n(390, 27, N'دار السلام', N'Dar AISalaam'),\r\n(391, 27, N'جرجا', N'Gerga'),\r\n(392, 27, N'جهينة الغربية', N'Jahina Al Gharbia'),\r\n(393, 27, N'ساقلته', N'Saqilatuh'),\r\n(394, 27, N'طما', N'Tama'),\r\n(395, 27, N'طهطا', N'Tahta'),\r\n(396, 27, N'الكوثر', N'Alkawthar');\r\nIF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'GovernorateId', N'NameAr', N'NameEn') AND [object_id] = OBJECT_ID(N'[Cities]'))\r\n    SET IDENTITY_INSERT [Cities] OFF;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:07.5401295+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"38","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId', N'AssignedOn') AND [object_id] = OBJECT_ID(N'[UserRoles]'))\r\n    SET IDENTITY_INSERT [UserRoles] ON;\r\nINSERT INTO [UserRoles] ([RoleId], [UserId], [AssignedOn])\r\nVALUES (1, 1, '2025-01-02T00:00:00.0000000Z'),\r\n(2, 2, '2025-01-02T00:00:00.0000000Z');\r\nIF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'RoleId', N'UserId', N'AssignedOn') AND [object_id] = OBJECT_ID(N'[UserRoles]'))\r\n    SET IDENTITY_INSERT [UserRoles] OFF;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.5850346+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Addresses_CityId] ON [Addresses] ([CityId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.5878827+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Addresses_UserId] ON [Addresses] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.5907967+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Brands_Name] ON [Brands] ([Name]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.5934607+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Categories_ParentCategoryId] ON [Categories] ([ParentCategoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6220977+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"28","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Cities_GovernorateId] ON [Cities] ([GovernorateId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6266791+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Discounts_CouponId] ON [Discounts] ([CouponId]) WHERE [CouponId] IS NOT NULL;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6297251+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Discounts_DiscountTypeId] ON [Discounts] ([DiscountTypeId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6326371+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Discounts_ProductInventoryId] ON [Discounts] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6353871+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_OrderItems_ProductInventoryId] ON [OrderItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6386576+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Orders_UserId] ON [Orders] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6412918+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Payments_OrderId] ON [Payments] ([OrderId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6440814+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_ProductAttributes_Name] ON [ProductAttributes] ([Name]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6469012+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductAttributeValues_AttributeId] ON [ProductAttributeValues] ([AttributeId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6497206+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_CreatedByUserId] ON [ProductInventories] ([CreatedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6523659+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_Id] ON [ProductInventories] ([Id]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6548427+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_LastModifiedByUserId] ON [ProductInventories] ([LastModifiedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6576583+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_ProductId] ON [ProductInventories] ([ProductId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6605569+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventoryImages_ProductInventoryId] ON [ProductInventoryImages] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6633013+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_BrandId] ON [Products] ([BrandId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6660314+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_CategoryId] ON [Products] ([CategoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6687665+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_CreatedByUserId] ON [Products] ([CreatedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:10.6713221+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_LastModifiedByUserId] ON [Products] ([LastModifiedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3309937+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_RefreshTokens_UserId] ON [RefreshTokens] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3335825+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Reviews_ProductId] ON [Reviews] ([ProductId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3357970+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3384473+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Shippings_AddressId] ON [Shippings] ([AddressId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3408741+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Shippings_OrderId] ON [Shippings] ([OrderId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3431615+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ShoppingCartItems_ProductInventoryId] ON [ShoppingCartItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3456074+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_ShoppingCarts_UserId] ON [ShoppingCarts] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3519476+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_UserRoles_RoleId] ON [UserRoles] ([RoleId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3545994+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_WishLisits_UserId] ON [WishLisits] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3573672+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_WishListItems_ProductInventoryId] ON [WishListItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3611164+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])\r\nVALUES (N'20250102222818_InitialMigration', N'9.0.0');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.3614125+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250107144911_FixTokenColumnLengthInRefreshTokensTable","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:59:13.5180539+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"125","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @var0 sysname;\r\nSELECT @var0 = [d].[name]\r\nFROM [sys].[default_constraints] [d]\r\nINNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]\r\nWHERE ([d].[parent_object_id] = OBJECT_ID(N'[RefreshTokens]') AND [c].[name] = N'Token');\r\nIF @var0 IS NOT NULL EXEC(N'ALTER TABLE [RefreshTokens] DROP CONSTRAINT [' + @var0 + '];');\r\nALTER TABLE [RefreshTokens] ALTER COLUMN [Token] nvarchar(250) NOT NULL;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.5195432+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])\r\nVALUES (N'20250107144911_FixTokenColumnLengthInRefreshTokensTable', N'9.0.0');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T22:59:13.5200032+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250119205123_changeIdToGuid","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T22:59:13.5544490+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.2707768+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"335","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\r\n","commandText":"CREATE DATABASE [StoreDB];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.4188215+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"125","parameters":"","commandType":"Text","commandTimeout":60,"newLine":"\r\n","commandText":"IF SERVERPROPERTY('EngineEdition') <> 5\r\nBEGIN\r\n    ALTER DATABASE [StoreDB] SET READ_COMMITTED_SNAPSHOT ON;\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.4374854+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.4399069+02:00","Level":"Information","MessageTemplate":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","Properties":{"EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T23:06:06.4573546+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"16","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.5052797+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.5126582+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.5143435+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.5309513+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"15","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.5384781+02:00","Level":"Information","MessageTemplate":"Applying migration '{migration}'.","Properties":{"migration":"20250119210541_Initial","EventId":{"Id":20402,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationApplying"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}}
{"Timestamp":"2025-01-19T23:06:06.5959236+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Brands] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(100) NOT NULL,\r\n    [LogoPath] nvarchar(500) NULL,\r\n    CONSTRAINT [PK_Brands] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6009663+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Categories] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(100) NOT NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [ParentCategoryId] uniqueidentifier NULL,\r\n    CONSTRAINT [PK_Categories] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Categories_Categories_ParentCategoryId] FOREIGN KEY ([ParentCategoryId]) REFERENCES [Categories] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6043613+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Coupons] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    [Description] nvarchar(250) NULL,\r\n    [Code] nvarchar(30) NOT NULL,\r\n    CONSTRAINT [PK_Coupons] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6078170+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [DiscountTypes] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    CONSTRAINT [PK_DiscountTypes] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6117709+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductAttributes] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(30) NOT NULL,\r\n    [DataType] int NOT NULL,\r\n    CONSTRAINT [PK_ProductAttributes] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6150074+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Roles] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(30) NOT NULL,\r\n    CONSTRAINT [PK_Roles] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6198997+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Users] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [FirstName] nvarchar(50) NOT NULL,\r\n    [LastName] nvarchar(50) NOT NULL,\r\n    [Email] nvarchar(50) NOT NULL,\r\n    [HashedPassword] nvarchar(128) NOT NULL,\r\n    [PhoneNumber] nvarchar(11) NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [IsDeleted] bit NOT NULL,\r\n    CONSTRAINT [PK_Users] PRIMARY KEY ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6240184+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Orders] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    [OrderDate] datetime2 NOT NULL,\r\n    [TotalAmount] decimal(10,2) NOT NULL,\r\n    [Status] int NOT NULL,\r\n    CONSTRAINT [PK_Orders] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Orders_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6388372+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Products] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(500) NOT NULL,\r\n    [Description] nvarchar(max) NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [BrandId] uniqueidentifier NOT NULL,\r\n    [CategoryId] uniqueidentifier NOT NULL,\r\n    [CreatedByUserId] uniqueidentifier NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [LastModifiedByUserId] uniqueidentifier NULL,\r\n    [LastModifiedOn] datetime2 NULL,\r\n    CONSTRAINT [PK_Products] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Products_Brands_BrandId] FOREIGN KEY ([BrandId]) REFERENCES [Brands] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Products_Categories_CategoryId] FOREIGN KEY ([CategoryId]) REFERENCES [Categories] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_Products_Users_CreatedByUserId] FOREIGN KEY ([CreatedByUserId]) REFERENCES [Users] ([Id]),\r\n    CONSTRAINT [FK_Products_Users_LastModifiedByUserId] FOREIGN KEY ([LastModifiedByUserId]) REFERENCES [Users] ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6436008+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [RefreshTokens] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    [Token] nvarchar(250) NOT NULL,\r\n    [ExpiresOn] datetime2 NOT NULL,\r\n    [IsRevoked] bit NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_RefreshTokens] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_RefreshTokens_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6474225+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ShoppingCarts] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    CONSTRAINT [PK_ShoppingCarts] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ShoppingCarts_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6532983+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [UserRoles] (\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    [RoleId] uniqueidentifier NOT NULL,\r\n    CONSTRAINT [PK_UserRoles] PRIMARY KEY ([UserId], [RoleId]),\r\n    CONSTRAINT [FK_UserRoles_Roles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [Roles] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_UserRoles_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6584761+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [WishLisits] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    CONSTRAINT [PK_WishLisits] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_WishLisits_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6631785+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Payments] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [OrderId] uniqueidentifier NOT NULL,\r\n    [Amount] decimal(10,2) NOT NULL,\r\n    [Method] int NOT NULL,\r\n    [Status] int NOT NULL,\r\n    [PaymentDate] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_Payments] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Payments_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6667757+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Shippings] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [OrderId] uniqueidentifier NOT NULL,\r\n    [AddressId] int NOT NULL,\r\n    [Status] int NOT NULL,\r\n    [Method] int NOT NULL,\r\n    [ShippedDate] datetime2 NOT NULL,\r\n    [DeliveryDate] datetime2 NULL,\r\n    CONSTRAINT [PK_Shippings] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Shippings_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:06.6725523+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductInventories] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [ProductId] uniqueidentifier NOT NULL,\r\n    [IsActive] bit NOT NULL,\r\n    [IsDigital] bit NOT NULL,\r\n    [Price] decimal(10,2) NOT NULL,\r\n    [Weight] real NOT NULL,\r\n    [UnitsInStock] int NOT NULL,\r\n    [CreatedByUserId] uniqueidentifier NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    [LastModifiedByUserId] uniqueidentifier NULL,\r\n    [LastModifiedOn] datetime2 NULL,\r\n    CONSTRAINT [PK_ProductInventories] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ProductInventories_Products_ProductId] FOREIGN KEY ([ProductId]) REFERENCES [Products] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_ProductInventories_Users_CreatedByUserId] FOREIGN KEY ([CreatedByUserId]) REFERENCES [Users] ([Id]),\r\n    CONSTRAINT [FK_ProductInventories_Users_LastModifiedByUserId] FOREIGN KEY ([LastModifiedByUserId]) REFERENCES [Users] ([Id])\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:09.6593726+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Reviews] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [ProductId] uniqueidentifier NOT NULL,\r\n    [UserId] uniqueidentifier NOT NULL,\r\n    [Comment] nvarchar(1000) NULL,\r\n    [Rating] tinyint NOT NULL,\r\n    [CreatedOn] datetime2 NOT NULL,\r\n    CONSTRAINT [PK_Reviews] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Reviews_Products_ProductId] FOREIGN KEY ([ProductId]) REFERENCES [Products] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_Reviews_Users_UserId] FOREIGN KEY ([UserId]) REFERENCES [Users] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:09.6675324+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"8","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [Discounts] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    [Name] nvarchar(50) NOT NULL,\r\n    [DiscountValue] int NOT NULL,\r\n    [Start] datetime2 NOT NULL,\r\n    [End] datetime2 NOT NULL,\r\n    [IsActive] bit NOT NULL DEFAULT CAST(1 AS bit),\r\n    [DiscountTypeId] uniqueidentifier NOT NULL,\r\n    [CouponId] uniqueidentifier NULL,\r\n    CONSTRAINT [PK_Discounts] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_Discounts_Coupons_CouponId] FOREIGN KEY ([CouponId]) REFERENCES [Coupons] ([Id]),\r\n    CONSTRAINT [FK_Discounts_DiscountTypes_DiscountTypeId] FOREIGN KEY ([DiscountTypeId]) REFERENCES [DiscountTypes] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_Discounts_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:09.6768947+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [OrderItems] (\r\n    [OrderId] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    [Quantity] int NOT NULL,\r\n    [Price] decimal(10,2) NOT NULL,\r\n    [Id] uniqueidentifier NOT NULL,\r\n    CONSTRAINT [PK_OrderItems] PRIMARY KEY ([OrderId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_OrderItems_Orders_OrderId] FOREIGN KEY ([OrderId]) REFERENCES [Orders] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_OrderItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE NO ACTION\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:09.6822951+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductAttributeValues] (\r\n    [AttributeId] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    [value] nvarchar(255) NOT NULL,\r\n    CONSTRAINT [PK_ProductAttributeValues] PRIMARY KEY ([ProductInventoryId], [AttributeId]),\r\n    CONSTRAINT [FK_ProductAttributeValues_ProductAttributes_AttributeId] FOREIGN KEY ([AttributeId]) REFERENCES [ProductAttributes] ([Id]) ON DELETE NO ACTION,\r\n    CONSTRAINT [FK_ProductAttributeValues_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:09.6876255+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ProductInventoryImages] (\r\n    [Id] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    [ImagePath] nvarchar(255) NULL,\r\n    [DisplayOreder] int NOT NULL,\r\n    CONSTRAINT [PK_ProductInventoryImages] PRIMARY KEY ([Id]),\r\n    CONSTRAINT [FK_ProductInventoryImages_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2605369+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [ShoppingCartItems] (\r\n    [ShoppingCartId] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    [Quantity] int NOT NULL,\r\n    CONSTRAINT [PK_ShoppingCartItems] PRIMARY KEY ([ShoppingCartId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_ShoppingCartItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_ShoppingCartItems_ShoppingCarts_ShoppingCartId] FOREIGN KEY ([ShoppingCartId]) REFERENCES [ShoppingCarts] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2678862+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE TABLE [WishListItems] (\r\n    [WishListId] uniqueidentifier NOT NULL,\r\n    [ProductInventoryId] uniqueidentifier NOT NULL,\r\n    CONSTRAINT [PK_WishListItems] PRIMARY KEY ([WishListId], [ProductInventoryId]),\r\n    CONSTRAINT [FK_WishListItems_ProductInventories_ProductInventoryId] FOREIGN KEY ([ProductInventoryId]) REFERENCES [ProductInventories] ([Id]) ON DELETE CASCADE,\r\n    CONSTRAINT [FK_WishListItems_WishLisits_WishListId] FOREIGN KEY ([WishListId]) REFERENCES [WishLisits] ([Id]) ON DELETE CASCADE\r\n);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2706759+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Brands_Name] ON [Brands] ([Name]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2733741+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Categories_ParentCategoryId] ON [Categories] ([ParentCategoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2764413+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Discounts_CouponId] ON [Discounts] ([CouponId]) WHERE [CouponId] IS NOT NULL;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2792781+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Discounts_DiscountTypeId] ON [Discounts] ([DiscountTypeId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2821298+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Discounts_ProductInventoryId] ON [Discounts] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2850233+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_OrderItems_ProductInventoryId] ON [OrderItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2876576+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Orders_UserId] ON [Orders] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2902477+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Payments_OrderId] ON [Payments] ([OrderId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2930434+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_ProductAttributes_Name] ON [ProductAttributes] ([Name]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2958346+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductAttributeValues_AttributeId] ON [ProductAttributeValues] ([AttributeId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.2985177+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_CreatedByUserId] ON [ProductInventories] ([CreatedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.3009456+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_Id] ON [ProductInventories] ([Id]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.3034606+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_LastModifiedByUserId] ON [ProductInventories] ([LastModifiedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:12.3059420+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventories_ProductId] ON [ProductInventories] ([ProductId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5313061+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ProductInventoryImages_ProductInventoryId] ON [ProductInventoryImages] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5339737+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_BrandId] ON [Products] ([BrandId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5365398+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_CategoryId] ON [Products] ([CategoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5391505+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_CreatedByUserId] ON [Products] ([CreatedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5416312+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Products_LastModifiedByUserId] ON [Products] ([LastModifiedByUserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5439025+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_RefreshTokens_UserId] ON [RefreshTokens] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5464543+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Reviews_ProductId] ON [Reviews] ([ProductId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5489366+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_Reviews_UserId] ON [Reviews] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5517975+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_Shippings_OrderId] ON [Shippings] ([OrderId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5545081+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_ShoppingCartItems_ProductInventoryId] ON [ShoppingCartItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5571543+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_ShoppingCarts_UserId] ON [ShoppingCarts] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5595808+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_UserRoles_RoleId] ON [UserRoles] ([RoleId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5620866+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE UNIQUE INDEX [IX_WishLisits_UserId] ON [WishLisits] ([UserId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5646746+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"CREATE INDEX [IX_WishListItems_ProductInventoryId] ON [WishListItems] ([ProductInventoryId]);","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5779925+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"13","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])\r\nVALUES (N'20250119210541_Initial', N'9.0.0');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:06:14.5891532+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","Properties":{"elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}}
{"Timestamp":"2025-01-19T23:12:19.4414349+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:12:19.7419499+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:12:19.7465489+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:12:19.8085293+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:12:19.8108391+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:12:19.8128270+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:12:25.1726693+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/scalar/v1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000001","RequestPath":"/scalar/v1","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.2725699+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"EndpointName":"HTTP: GET /scalar/{documentName}","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000001","RequestPath":"/scalar/v1","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.2934467+02:00","Level":"Information","MessageTemplate":"Write content with HTTP Response ContentType of {ContentType}","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"ContentType":"text/html","EventId":{"Id":2,"Name":"WritingResultAsContent"},"SourceContext":"Microsoft.AspNetCore.Http.Result.ContentResult","RequestId":"0HN9OPNSDITQ2:00000001","RequestPath":"/scalar/v1","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.3007334+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"EndpointName":"HTTP: GET /scalar/{documentName}","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000001","RequestPath":"/scalar/v1","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.3041243+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"RequestMethod":"GET","RequestPath":"/scalar/v1","StatusCode":200,"Elapsed":941.5039,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:00000001","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"941.5039"}]}}
{"Timestamp":"2025-01-19T23:12:26.3131965+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"9647bd987fd09f2acba29624c5a76208","SpanId":"ce1db424b39f2211","Properties":{"ElapsedMilliseconds":1144.6647,"StatusCode":200,"ContentType":"text/html","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/scalar/v1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000001","RequestPath":"/scalar/v1","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.3839391+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"abfd29df66794d60cab7270510a87cd6","SpanId":"1e8fe22ee3cec988","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000005","RequestPath":"/_vs/browserLink","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.3839364+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/scalar/scalar.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000003","RequestPath":"/scalar/scalar.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.3860743+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"392f41b0dfe21751391d82eded17cfcf","SpanId":"c0a918082cd1a9f8","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000007","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.4763242+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"EndpointName":"HTTP: GET /scalar/{documentName}","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000003","RequestPath":"/scalar/scalar.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.4828105+02:00","Level":"Information","MessageTemplate":"Sending file with download name '{FileDownloadName}'.","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"FileDownloadName":"","EventId":{"Id":5,"Name":"WritingResultAsFileWithNoFileName"},"SourceContext":"Microsoft.AspNetCore.Http.Result.FileStreamResult","RequestId":"0HN9OPNSDITQ2:00000003","RequestPath":"/scalar/scalar.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.4856243+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"392f41b0dfe21751391d82eded17cfcf","SpanId":"c0a918082cd1a9f8","Properties":{"ElapsedMilliseconds":99.4838,"StatusCode":200,"ContentType":"application/javascript; charset=utf-8","ContentLength":13770,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/_framework/aspnetcore-browser-refresh.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000007","RequestPath":"/_framework/aspnetcore-browser-refresh.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.5176265+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"EndpointName":"HTTP: GET /scalar/{documentName}","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000003","RequestPath":"/scalar/scalar.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.5204601+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"RequestMethod":"GET","RequestPath":"/scalar/scalar.js","StatusCode":200,"Elapsed":116.9713,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:00000003","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"116.9713"}]}}
{"Timestamp":"2025-01-19T23:12:26.5235345+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"9313d7de1aaefc8fb646403e74cb33e4","SpanId":"c00bcbb4e50c02f5","Properties":{"ElapsedMilliseconds":139.7819,"StatusCode":200,"ContentType":"text/javascript","ContentLength":2683927,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/scalar/scalar.js","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000003","RequestPath":"/scalar/scalar.js","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.5238381+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"abfd29df66794d60cab7270510a87cd6","SpanId":"1e8fe22ee3cec988","Properties":{"ElapsedMilliseconds":139.9921,"StatusCode":200,"ContentType":"text/javascript; charset=UTF-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/_vs/browserLink","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000005","RequestPath":"/_vs/browserLink","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.6009870+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"20b2ccbd393c17e367589cfb50ec2b02","SpanId":"3677607bf67fcff4","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/openapi/v1.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000009","RequestPath":"/openapi/v1.json","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.6074292+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"20b2ccbd393c17e367589cfb50ec2b02","SpanId":"3677607bf67fcff4","Properties":{"EndpointName":"HTTP: GET /openapi/{documentName}.json","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000009","RequestPath":"/openapi/v1.json","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.7343280+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"20b2ccbd393c17e367589cfb50ec2b02","SpanId":"3677607bf67fcff4","Properties":{"EndpointName":"HTTP: GET /openapi/{documentName}.json","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000009","RequestPath":"/openapi/v1.json","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:26.7364198+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"20b2ccbd393c17e367589cfb50ec2b02","SpanId":"3677607bf67fcff4","Properties":{"RequestMethod":"GET","RequestPath":"/openapi/v1.json","StatusCode":200,"Elapsed":130.3529,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:00000009","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"130.3529"}]}}
{"Timestamp":"2025-01-19T23:12:26.7397007+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"20b2ccbd393c17e367589cfb50ec2b02","SpanId":"3677607bf67fcff4","Properties":{"ElapsedMilliseconds":138.7336,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/openapi/v1.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000009","RequestPath":"/openapi/v1.json","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:27.3694234+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"0fda3a0356a44d5d5c9e8352138a1234","SpanId":"115631e503875f30","Properties":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/favicon.ico","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000B","RequestPath":"/favicon.ico","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:27.3743515+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"0fda3a0356a44d5d5c9e8352138a1234","SpanId":"115631e503875f30","Properties":{"RequestMethod":"GET","RequestPath":"/favicon.ico","StatusCode":404,"Elapsed":0.2877,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:0000000B","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"0.2877"}]}}
{"Timestamp":"2025-01-19T23:12:27.3787839+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"0fda3a0356a44d5d5c9e8352138a1234","SpanId":"115631e503875f30","Properties":{"ElapsedMilliseconds":9.3488,"StatusCode":404,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/favicon.ico","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000B","RequestPath":"/favicon.ico","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:27.3838179+02:00","Level":"Information","MessageTemplate":"Request reached the end of the middleware pipeline without being handled by application code. Request path: {Method} {Scheme}://{Host}{PathBase}{Path}, Response status code: {StatusCode}","TraceId":"0fda3a0356a44d5d5c9e8352138a1234","SpanId":"115631e503875f30","Properties":{"Method":"GET","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/favicon.ico","StatusCode":404,"EventId":{"Id":16},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000B","RequestPath":"/favicon.ico","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.0760285+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.1129445+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.1229269+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.1271377+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.1642219+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:46.4239880+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:12:46.4228322Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:12:49.4177242+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"elapsed":"230","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:06.6596234+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20483.0178,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:06.6671645+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:06.7524202+02:00","Level":"Error","MessageTemplate":"Unexcpected error occurd: {@ErrorMessage}","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"ErrorMessage":"Failed to create a Response instance.","SourceContext":"Store.Api.Middlewares.ExceptionHandlerMiddleware","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:06.7640583+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":500,"Elapsed":20678.7154,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:0000000D","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"20678.7154"}]}}
{"Timestamp":"2025-01-19T23:13:06.7819769+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"98164b83104d4b7e800437a2bd5c45f3","SpanId":"1d72a0c827cf75d8","Properties":{"ElapsedMilliseconds":20705.99,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.7862226+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.7980013+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.8024402+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.8044967+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.8081686+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.8196242+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:13:13.8195631Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:13.9153533+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"elapsed":"13","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:15.6535573+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":1838.7413,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:15.6605049+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:15.7185044+02:00","Level":"Error","MessageTemplate":"Unexcpected error occurd: {@ErrorMessage}","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"ErrorMessage":"Failed to create a Response instance.","SourceContext":"Store.Api.Middlewares.ExceptionHandlerMiddleware","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:13:15.7229071+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":500,"Elapsed":1925.817,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:0000000F","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1925.8170"}]}}
{"Timestamp":"2025-01-19T23:13:15.7299115+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"695887205eb24e7d6a8b218eecbecec9","SpanId":"c4f99902238b611b","Properties":{"ElapsedMilliseconds":1943.7236,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0381651+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0552170+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0580331+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0610830+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0626225+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.0789796+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:14:04.0789480Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:04.1694627+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:19.6717376+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":15605.6928,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:19.6775651+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:19.7769895+02:00","Level":"Error","MessageTemplate":"Unexcpected error occurd: {@ErrorMessage}","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"ErrorMessage":"Failed to create a Response instance.","SourceContext":"Store.Api.Middlewares.ExceptionHandlerMiddleware","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:14:19.7805973+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":500,"Elapsed":15726.1197,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:00000011","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"15726.1197"}]}}
{"Timestamp":"2025-01-19T23:14:19.7846262+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"64439547295b4fc55c03d4513460662d","SpanId":"87013e6bc6f74420","Properties":{"ElapsedMilliseconds":15746.5846,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8455203+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8561548+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8593893+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8614140+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8633156+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8668707+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:15:54.8668343Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:15:54.8780984+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:00.3616871+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":5496.0555,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:00.3652327+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:00.4530942+02:00","Level":"Error","MessageTemplate":"Unexcpected error occurd: {@ErrorMessage}","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"ErrorMessage":"Failed to create a Response instance.","SourceContext":"Store.Api.Middlewares.ExceptionHandlerMiddleware","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:00.4580296+02:00","Level":"Error","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":500,"Elapsed":5602.3249,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OPNSDITQ2:00000013","ConnectionId":"0HN9OPNSDITQ2"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"5602.3249"}]}}
{"Timestamp":"2025-01-19T23:16:00.4621070+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"05cf64a834717fb00c8b9ee79e541649","SpanId":"240a513b74afe06f","Properties":{"ElapsedMilliseconds":5616.7454,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9400796+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9530690+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9576761+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9601100+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9623771+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9668404+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:16:09.9668157Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:16:09.9789888+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"440785b19e29a9485669249ae49e78ba","SpanId":"f8816ad27e2bf5a9","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"09a6faee-eb87-4d8b-a2a0-e7127906284c","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPNSDITQ2:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPNSDITQ2"}}
{"Timestamp":"2025-01-19T23:18:13.9778161+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:18:14.1339807+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:18:14.1377124+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:18:14.1636600+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:18:14.1650395+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:18:14.1661427+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:18:14.9621273+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:15.1194452+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:15.1258195+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:15.1304786+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:15.1497174+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"52c6a860-f91a-409b-884a-edff1365d044","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:15.2593361+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:18:15.2588691Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"52c6a860-f91a-409b-884a-edff1365d044","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:18:16.3956257+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e533ed84ceed2cec694ad2ad4a546204","SpanId":"f2a9eb9db75f4836","Properties":{"elapsed":"41","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"52c6a860-f91a-409b-884a-edff1365d044","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPR4LLN61:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPR4LLN61"}}
{"Timestamp":"2025-01-19T23:19:02.4379164+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:19:02.6562651+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:02.6598954+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:02.6813867+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:02.6844879+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:02.6860004+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:04.1282022+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:04.1944439+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:04.2009401+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:04.2055749+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:04.2279462+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"57ab4bbf-d4f2-4b80-9312-35be7423a5f3","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:04.3343555+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:19:04.3339069Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"57ab4bbf-d4f2-4b80-9312-35be7423a5f3","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:05.4051151+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"afae98868edc9fbbdb58ccd006d02458","SpanId":"fe48fd5031d115af","Properties":{"elapsed":"33","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"57ab4bbf-d4f2-4b80-9312-35be7423a5f3","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPRJAGT2A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPRJAGT2A"}}
{"Timestamp":"2025-01-19T23:19:29.1473318+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:19:29.2915141+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:29.2961919+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:29.3184420+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:29.3218427+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:29.3239578+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:19:59.4473757+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:19:59.5860071+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:19:59.5977851+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:19:59.6073888+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:19:59.6514187+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"ae794995-0de2-4559-a198-81836c647302","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:19:59.8284990+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:19:59.8276278Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"ae794995-0de2-4559-a198-81836c647302","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:20:02.2501171+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f649dcb6fcd2d5d0ec04e6de73488770","SpanId":"b562c5e1c04ef329","Properties":{"elapsed":"87","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"ae794995-0de2-4559-a198-81836c647302","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OPS3P33IA:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OPS3P33IA"}}
{"Timestamp":"2025-01-19T23:31:20.8648506+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:31:21.2945776+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:21.3004557+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:21.3454700+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:21.3483618+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:21.3495352+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:27.2889274+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:28.3136703+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:28.3255597+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:28.3374321+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:28.4036918+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fab4cb50-0a6b-4c92-8ee0-3a35bf64a36d","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:28.8346464+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:31:28.8335679Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"fab4cb50-0a6b-4c92-8ee0-3a35bf64a36d","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:32.1977359+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"a8079a35d60847e6f97ce4a2a9860698","SpanId":"e362132ff23df858","Properties":{"elapsed":"174","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"fab4cb50-0a6b-4c92-8ee0-3a35bf64a36d","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2F2PHSM:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2F2PHSM"}}
{"Timestamp":"2025-01-19T23:31:56.5831663+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:31:56.7518472+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:56.7560789+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:56.7823681+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:56.7854893+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:56.7876394+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:31:57.7833285+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:57.8690400+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:57.8730573+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:57.8773253+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:57.8963293+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1a0bffb5-67c0-4261-8163-8adbcdf9e484","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:57.9879713+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:31:57.9876438Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"1a0bffb5-67c0-4261-8163-8adbcdf9e484","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:31:59.1070291+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"1bd661a7d4a6a67170a6e18dc9aa72ba","SpanId":"5b04bb41e32b5c25","Properties":{"elapsed":"38","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"1a0bffb5-67c0-4261-8163-8adbcdf9e484","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ2PSGS8A:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ2PSGS8A"}}
{"Timestamp":"2025-01-19T23:33:24.1219492+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:33:24.2868743+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:33:24.2886630+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:33:24.3141362+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:33:24.3172074+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:33:24.3249764+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:33:26.8039496+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:26.8663653+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:26.8730117+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:26.8778880+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:26.9015956+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"4efee124-28e2-4670-8947-14da4b7fd5c2","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:27.0022719+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:33:27.0017840Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"4efee124-28e2-4670-8947-14da4b7fd5c2","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:33:28.1145711+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"70b771d29cd5a55eb3bef3253a7f6d04","SpanId":"048cee136302b8ae","Properties":{"elapsed":"51","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"4efee124-28e2-4670-8947-14da4b7fd5c2","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ3KDLDJ6:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ3KDLDJ6"}}
{"Timestamp":"2025-01-19T23:34:15.2545030+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:34:15.4534728+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:34:15.4582300+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:34:15.4805310+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:34:15.4841958+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:34:15.4865039+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:34:15.6133232+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:15.6912066+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:15.6953659+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:15.6990742+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:15.7227995+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"3652fb1f-9502-4a67-87f7-8720df564dc0","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:15.8233205+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:34:15.8229579Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"3652fb1f-9502-4a67-87f7-8720df564dc0","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:34:16.9331973+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"1c16419e1cde383a0ff8a013b92ffb8a","SpanId":"c24a0b56935d57e0","Properties":{"elapsed":"47","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"3652fb1f-9502-4a67-87f7-8720df564dc0","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ42UVS3V:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ42UVS3V"}}
{"Timestamp":"2025-01-19T23:35:27.0424042+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:35:27.2012582+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:35:27.2064156+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:35:27.2320939+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:35:27.2339661+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:35:27.2358452+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:35:27.8929809+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:27.9568787+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:27.9633403+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:27.9688129+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:27.9907107+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"88918e98-4141-47ab-b50d-197325086388","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:28.0852575+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:35:28.0848752Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"88918e98-4141-47ab-b50d-197325086388","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:35:29.1882761+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"563a416a9d8a972587fd37c391b51e50","SpanId":"b8f9ff2fe2117b5c","Properties":{"elapsed":"47","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"88918e98-4141-47ab-b50d-197325086388","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ4OGEIPR:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ4OGEIPR"}}
{"Timestamp":"2025-01-19T23:37:44.2951585+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:37:44.4758355+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:37:44.4802242+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:37:44.5125262+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:37:44.5160130+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:37:44.5175117+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:37:50.0200371+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:50.0843875+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:50.0898035+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:50.0934609+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:50.1125765+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"c9752596-fad3-469d-b631-dbb64e4eb0dd","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:50.2141266+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:37:50.2137215Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"c9752596-fad3-469d-b631-dbb64e4eb0dd","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:37:52.3375564+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"97b8daa54017dc24f66bde808600fd70","SpanId":"658c336b5453a358","Properties":{"elapsed":"65","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"c9752596-fad3-469d-b631-dbb64e4eb0dd","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ62RU5Q4:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ62RU5Q4"}}
{"Timestamp":"2025-01-19T23:40:02.6811135+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:40:02.8423507+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:40:02.8469573+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:40:02.8709526+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:40:02.8745805+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:40:02.8769835+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:40:02.9825085+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:03.0487618+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:03.0550247+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:03.0596858+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:03.0825135+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"228594de-d435-4393-9b36-3e100d413517","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:03.1970720+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:40:03.1965149Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"228594de-d435-4393-9b36-3e100d413517","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:40:04.3465925+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f6892b555cf821a98b52cec9e9758431","SpanId":"75891e7dedbc1183","Properties":{"elapsed":"43","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"228594de-d435-4393-9b36-3e100d413517","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ7AFSBK1:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ7AFSBK1"}}
{"Timestamp":"2025-01-19T23:41:47.7413227+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:41:47.9103496+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:41:47.9135350+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:41:47.9345099+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:41:47.9374189+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:41:47.9390858+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:41:52.4160729+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:52.4891533+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:52.4948273+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:52.4988238+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:52.5205413+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bfe1474a-c73e-4cd6-a9e0-99d3811af82b","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:52.6207047+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:41:52.6202138Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bfe1474a-c73e-4cd6-a9e0-99d3811af82b","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:41:54.3970275+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"4de0082010f3f9776f4dabaa0e69c446","SpanId":"94f8413db155f076","Properties":{"elapsed":"76","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bfe1474a-c73e-4cd6-a9e0-99d3811af82b","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8B3GSEH:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8B3GSEH"}}
{"Timestamp":"2025-01-19T23:42:45.5329057+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:42:45.7045940+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:42:45.7083875+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:42:45.7335894+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:42:45.7370880+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:42:45.7390507+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:42:49.0667402+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:49.1279190+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:49.1342913+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:49.1398022+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:49.1593229+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"0f28e86a-5917-4665-904f-be9a82a4f4ca","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:49.2530704+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:42:49.2525182Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"0f28e86a-5917-4665-904f-be9a82a4f4ca","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:42:50.3178023+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"d8951a0753b78b15cb77ede944d98fd9","SpanId":"469e9ca4e96910a1","Properties":{"elapsed":"50","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"0f28e86a-5917-4665-904f-be9a82a4f4ca","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ8RVQ9QP:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ8RVQ9QP"}}
{"Timestamp":"2025-01-19T23:44:17.8104088+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:44:18.0426967+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:44:18.0458945+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:44:18.0694029+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:44:18.0731126+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:44:18.0809388+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:44:24.1300084+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:24.2649121+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:24.2772303+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:24.2895223+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:24.3391948+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:24.5523728+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:44:24.5516844Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.1478960+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"elapsed":"113","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.2077797+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:44:27.2076576Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.2194706+02:00","Level":"Information","MessageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.2289799+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":2879.1413,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.2350290+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:27.2417876+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":204,"Elapsed":3054.2296,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQ9O9PG3R:00000001","ConnectionId":"0HN9OQ9O9PG3R"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"3054.2296"}]}}
{"Timestamp":"2025-01-19T23:44:27.2634138+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"40c4d0e04e6d0216bfb87d8b88134f41","SpanId":"62156ae8478f388d","Properties":{"ElapsedMilliseconds":3141.4552,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ9O9PG3R:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9579995+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9680852+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9726662+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9754115+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9783308+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:29.9872215+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:44:29.9871254Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0217743+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"elapsed":"9","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0275169+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:44:30.0274829Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0296727+02:00","Level":"Information","MessageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0319121+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":49.4451,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0361972+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:30.0402613+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":204,"Elapsed":73.3828,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQ9O9PG3R:00000003","ConnectionId":"0HN9OQ9O9PG3R"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"73.3828"}]}}
{"Timestamp":"2025-01-19T23:44:30.0473593+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"cc8f834716f39c2b7dbb7e22333ef837","SpanId":"17eea99a88b5e7e9","Properties":{"ElapsedMilliseconds":89.4063,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ9O9PG3R:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6402369+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6494845+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6553778+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6590036+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6614618+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.6788583+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:44:38.6787853Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:44:38.7739422+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"5c774d65be1e34bba7743d3428b3e556","SpanId":"c8165388a9e3e841","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"82627bdc-35a0-4740-ad42-fd281472595a","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQ9O9PG3R:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQ9O9PG3R"}}
{"Timestamp":"2025-01-19T23:45:37.7047315+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:45:37.9142427+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:45:37.9183886+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:45:37.9440874+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:45:37.9470791+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:45:37.9496187+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:45:38.6150736+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:38.6787355+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:38.6865279+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:38.6913848+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:38.7115448+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:38.8067900+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:45:38.8064396Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:39.9832042+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"elapsed":"53","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:40.0176595+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:45:40.0175268Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:40.0256580+02:00","Level":"Information","MessageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:40.0315977+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":1311.1189,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:40.0364065+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:40.0409666+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":204,"Elapsed":1396.1476,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQAEGOEJ3:00000001","ConnectionId":"0HN9OQAEGOEJ3"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1396.1476"}]}}
{"Timestamp":"2025-01-19T23:45:40.0548065+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"559ce36373d960f0b4dc75524c5cedb2","SpanId":"bcab79b917942aae","Properties":{"ElapsedMilliseconds":1442.9118,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQAEGOEJ3:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2524918+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2635201+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2691539+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2720823+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2749757+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.2862262+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:45:48.2861671Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3130714+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"elapsed":"4","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3203074+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:45:48.3202555Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3234830+02:00","Level":"Information","MessageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"7b1fb42c-348e-4ea7-82e7-d28cd5ab84f9","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3268036+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":46.4433,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3306072+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:45:48.3327560+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":204,"Elapsed":70.7419,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQAEGOEJ3:00000003","ConnectionId":"0HN9OQAEGOEJ3"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"70.7419"}]}}
{"Timestamp":"2025-01-19T23:45:48.3377078+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"24a41abdbc4b883333cfe42291806bfe","SpanId":"52ec7f88430efc68","Properties":{"ElapsedMilliseconds":85.4587,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQAEGOEJ3:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQAEGOEJ3"}}
{"Timestamp":"2025-01-19T23:46:08.0594942+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:46:08.2127940+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:08.2168057+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:08.2401466+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:08.2430576+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:08.2448529+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.1255324+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:46:28.3408285+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.3426018+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.3739075+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.3778875+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.3858726+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:46:28.3963692+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:28.4583440+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:28.4630626+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:28.4684274+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:28.4914939+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:28.5925649+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:28.5921445Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7219186+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"elapsed":"43","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7564983+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:29.7563962Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7639482+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7799468+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":1283.647,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7862015+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:29.7907110+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":1363.7994,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000001","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1363.7994"}]}}
{"Timestamp":"2025-01-19T23:46:29.8038184+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"1faaf118135482bb260efd65160da935","SpanId":"c156fe1c49a5027d","Properties":{"ElapsedMilliseconds":1410.3295,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8710809+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8773667+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8811699+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8835978+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8853448+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.8906906+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:31.8906597Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9080744+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"elapsed":"2","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9133824+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:31.9133590Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9160140+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9195597+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":31.1141,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9231655+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:31.9255196+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":48.8325,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000003","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"48.8325"}]}}
{"Timestamp":"2025-01-19T23:46:31.9284852+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"c9afe2fb513a4c762ba3ffc34459a6c7","SpanId":"3bd6058a8bc4f6f3","Properties":{"ElapsedMilliseconds":57.4921,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000003","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5064050+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5168961+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5227586+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5268344+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5291806+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.5479576+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:35.5478996Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6410637+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6505746+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:35.6505391Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6545562+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6580048+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":123.4274,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6616681+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:35.6633583+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":150.8436,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000005","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"150.8436"}]}}
{"Timestamp":"2025-01-19T23:46:35.6660945+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"d163e79527ab8196810fed2f4e6f7646","SpanId":"e89195f07f568ceb","Properties":{"ElapsedMilliseconds":159.6905,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000005","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6724713+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6802042+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6858407+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6888195+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6925856+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.6991178+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:36.6990278Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7073437+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7141652+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:36.7141186Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7180394+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7227587+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":25.6026,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7268416+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:36.7289550+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":49.5853,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000007","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"49.5853"}]}}
{"Timestamp":"2025-01-19T23:46:36.7334056+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"22776a9f4b8675256108885eacb61be0","SpanId":"0445a450dba08964","Properties":{"ElapsedMilliseconds":60.9248,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000007","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4157480+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4242947+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4291531+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4334653+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4365566+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4426944+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:37.4426390Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4501129+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4570243+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:37.4569939Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4597846+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4637114+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":22.6612,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4681940+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:37.4698752+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":46.1006,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000009","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"46.1006"}]}}
{"Timestamp":"2025-01-19T23:46:37.4742030+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e74cdb9bcad234d5746c78612e7049da","SpanId":"538e46114da9967b","Properties":{"ElapsedMilliseconds":58.5675,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000009","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0537654+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0596200+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0656272+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0695810+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0718189+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0752493+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.0752191Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0799562+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0864417+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.0864111Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0893343+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0924754+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":18.1363,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0952262+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.0974234+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":38.5147,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000000B","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"38.5147"}]}}
{"Timestamp":"2025-01-19T23:46:38.1008743+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"00776e60ac80de878e43b5a9fea521d4","SpanId":"6b677de102297747","Properties":{"ElapsedMilliseconds":47.1428,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.4803843+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.4883859+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.4917038+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.4941164+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.4964212+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5040800+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.5040416Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5102288+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5182396+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.5182032Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5212566+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5246873+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":21.8013,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5299555+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.5317592+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":43.8576,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000000D","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"43.8576"}]}}
{"Timestamp":"2025-01-19T23:46:38.5342028+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"7339f40b17d79f21e7a89859012c8c1b","SpanId":"8720eb4c20a31cd6","Properties":{"ElapsedMilliseconds":53.9086,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8292589+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8362339+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8392514+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8412385+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8426961+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8460227+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.8459980Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8511291+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"elapsed":"2","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8595316+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:38.8594990Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8621555+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8658631+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20.6023,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8694188+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:38.8708195+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":35.1991,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000000F","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"35.1991"}]}}
{"Timestamp":"2025-01-19T23:46:38.8734690+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"abf1bf0442921366d840e1bef639339c","SpanId":"d439c2bbc4da5744","Properties":{"ElapsedMilliseconds":44.4318,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000000F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0451037+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0506388+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0561393+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0588658+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0620100+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0677686+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.0677468Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0802556+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"elapsed":"8","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0883030+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.0882758Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0921389+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0952169+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":28.1685,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.0988030+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.1020649+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":51.7995,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000011","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"51.7995"}]}}
{"Timestamp":"2025-01-19T23:46:39.1075782+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"d0040f06dd17f2b56589ad03a462b66a","SpanId":"055534239a43a746","Properties":{"ElapsedMilliseconds":62.3244,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000011","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2541790+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2608546+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2651025+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2675082+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2695387+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2736216+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.2735971Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2835709+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2906531+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.2906305Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2928866+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2952788+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":22.413,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2976921+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.2995892+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":39.3513,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000013","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"39.3513"}]}}
{"Timestamp":"2025-01-19T23:46:39.3033250+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"217a7f76ed3f2761206fbad5c9cd437d","SpanId":"803250b682bdd969","Properties":{"ElapsedMilliseconds":49.1759,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000013","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4499111+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4574108+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4610842+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4635841+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4660514+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4703747+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.4703491Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4805182+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4870310+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.4870103Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4890516+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4908876+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":21.4363,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4928313+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.4960611+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":39.2338,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000015","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"39.2338"}]}}
{"Timestamp":"2025-01-19T23:46:39.4993767+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"45bb5feef3a33300e6b6e17716fe2476","SpanId":"390988f586ce7786","Properties":{"ElapsedMilliseconds":49.4909,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000015","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6598611+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6642000+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6683480+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6709315+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6726700+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6768298+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.6768133Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6854660+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6910315+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.6910025Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6933222+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6956464+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":19.4177,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.6978870+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.7000795+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":36.3056,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000017","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"36.3056"}]}}
{"Timestamp":"2025-01-19T23:46:39.7029393+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"f3c1ca06bd4ddab632cbbf48336b4938","SpanId":"e5d9affc2e9c8135","Properties":{"ElapsedMilliseconds":43.1148,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000017","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8545055+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8618841+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8664561+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8693642+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8719573+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8773273+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.8773114Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8885486+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.8974187+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:39.8973835Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.9015189+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.9046944+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":28.2762,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.9085045+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:39.9118512+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":50.4658,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000019","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"50.4658"}]}}
{"Timestamp":"2025-01-19T23:46:39.9172663+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"343985035922d9446c60c00d79468cba","SpanId":"747bec36634540ea","Properties":{"ElapsedMilliseconds":62.78,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000019","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0603282+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0672913+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0711492+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0742006+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0773423+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0824515+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.0824325Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.0928717+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.1008081+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.1007831Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.1055923+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.1103153+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":28.6951,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.1141552+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.1166979+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":49.825,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000001B","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"49.8250"}]}}
{"Timestamp":"2025-01-19T23:46:40.1213017+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"b0c809c5db5b050758d39ff7036df9c0","SpanId":"6699b4500bc5ac92","Properties":{"ElapsedMilliseconds":60.9763,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2669832+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2724865+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2766981+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2787640+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2812662+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2872989+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.2872715Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.2965311+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.3019037+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.3018772Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.3044864+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.3073878+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20.8127,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.3125417+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.3170081+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":45.0003,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000001D","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"45.0003"}]}}
{"Timestamp":"2025-01-19T23:46:40.3217805+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"cdb0092514b0f0e8ce7fe1d444528acf","SpanId":"cece66ae9551970f","Properties":{"ElapsedMilliseconds":54.8086,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5003406+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5075240+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5128136+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5152558+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5172557+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5214899+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.5214638Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5321685+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5376606+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.5376211Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5401216+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5436283+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":22.9226,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5456871+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.5478622+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":40.9531,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000001F","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"40.9531"}]}}
{"Timestamp":"2025-01-19T23:46:40.5508750+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"eea58b5242d9eb3a800a5768d763fd30","SpanId":"bf51d6e475281159","Properties":{"ElapsedMilliseconds":50.5724,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000001F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8397105+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8440930+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8473033+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8493080+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8508414+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8550085+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.8549859Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8653987+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8718078+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:40.8717912Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8740597+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8764642+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":22.0321,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8801309+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:40.8825994+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":38.8532,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000021","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"38.8532"}]}}
{"Timestamp":"2025-01-19T23:46:40.8871539+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"ca8e1265a10f6a891b03385c426151c9","SpanId":"d9c51a18decce60a","Properties":{"ElapsedMilliseconds":47.5089,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000021","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.1834416+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.1880035+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.1936778+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.1965577+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.1994307+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2063178+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.2062976Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2171383+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2270924+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.2270657Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2309123+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2348152+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":29.128,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2386447+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.2407004+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":53.0594,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000023","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"53.0594"}]}}
{"Timestamp":"2025-01-19T23:46:41.2445879+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"b08d6aee2aa47719465cc71eea4989c1","SpanId":"1904154b6ec62ec6","Properties":{"ElapsedMilliseconds":61.1607,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000023","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5681703+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5770230+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5822600+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5863253+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5891525+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.5944681+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.5944476Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6069335+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"elapsed":"7","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6146270+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.6146005Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6197412+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6244920+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":30.775,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6292537+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.6329870+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":56.3685,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000025","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"56.3685"}]}}
{"Timestamp":"2025-01-19T23:46:41.6377013+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"9c363518da44c1a3384a9407b9c6e2c4","SpanId":"8d72031c44cea253","Properties":{"ElapsedMilliseconds":69.5391,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000025","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8257078+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8322249+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8365852+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8382215+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8400126+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8432681+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.8432538Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8524957+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"elapsed":"6","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8561978+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:41.8561828Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8581049+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8602717+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":17.4653,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8628420+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:41.8651850+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":33.3533,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000027","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"33.3533"}]}}
{"Timestamp":"2025-01-19T23:46:41.8689512+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"a47662b5425e210ffcf13d8a808ca923","SpanId":"6bbe8c900588bd26","Properties":{"ElapsedMilliseconds":43.284,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000027","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0405637+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0463590+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0514260+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0537952+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0566060+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0601697+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:42.0601528Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0714268+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"elapsed":"8","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0794527+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:42.0794281Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0843082+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0892012+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":29.6249,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0944559+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:42.0978899+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":52.1205,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000029","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"52.1205"}]}}
{"Timestamp":"2025-01-19T23:46:42.1024303+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"7af770028907d77c88b6872eb108a1b5","SpanId":"826b66d57da5077c","Properties":{"ElapsedMilliseconds":61.902,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000029","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8384172+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8474248+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8517050+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8553141+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8576310+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8623051+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:47.8622795Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8762017+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"elapsed":"9","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8851150+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:47.8850973Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8909636+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.8969834+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":35.3943,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.9014568+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:47.9045649+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":57.7588,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000002B","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"57.7588"}]}}
{"Timestamp":"2025-01-19T23:46:47.9102425+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"18b178c72e1e6b78f147238edca776e8","SpanId":"415f1d4cc52d9340","Properties":{"ElapsedMilliseconds":71.7561,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5553547+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5643456+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5689992+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5716021+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5746374+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5812640+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:48.5812372Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5872448+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5930146+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:48.5930011Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5946405+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.5965050+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":15.9815,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.6003847+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:48.6027394+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":39.074,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000002D","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"39.0740"}]}}
{"Timestamp":"2025-01-19T23:46:48.6075944+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"b1ee6405fbadbc304a0cae5101dc25d4","SpanId":"7e90d6f5c05b189c","Properties":{"ElapsedMilliseconds":52.3,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.1965659+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2015829+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2035842+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2054958+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2076073+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2115949+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:49.2115829Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2165531+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2246174+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:49.2245939Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2275223+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2315237+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20.3163,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2345753+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.2359499+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":34.6998,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000002F","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"34.6998"}]}}
{"Timestamp":"2025-01-19T23:46:49.2382497+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"c098e12e8275fd1bf28cdb2f110d4769","SpanId":"4f36a29517591636","Properties":{"ElapsedMilliseconds":41.7368,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000002F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7553684+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7629714+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7673289+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7696791+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7718528+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7776402+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:49.7776198Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7829587+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7880470+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:49.7880144Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7917334+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7943562+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":17.3411,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7967967+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:49.7998324+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":37.3971,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000031","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"37.3971"}]}}
{"Timestamp":"2025-01-19T23:46:49.8055601+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"356989a14a968b71c0a641af387ce98b","SpanId":"ad26ccae22bcf600","Properties":{"ElapsedMilliseconds":50.2093,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000031","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1430599+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1504354+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1544667+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1570095+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1592139+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1637540+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.1637326Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1708401+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1759106+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.1758916Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1785952+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1821997+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":19.2211,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1841981+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.1855192+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":35.5296,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000033","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"35.5296"}]}}
{"Timestamp":"2025-01-19T23:46:50.1876018+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"17e080be69a633ae202b5948be4a0bdd","SpanId":"22c6ddb339bb1b5d","Properties":{"ElapsedMilliseconds":44.6026,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000033","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3339019+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3410051+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3461747+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3484607+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3504548+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3579713+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.3579510Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3632478+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3701814+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.3701578Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3741256+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3790634+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":21.841,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3827091+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.3848467+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":44.3786,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000035","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"44.3786"}]}}
{"Timestamp":"2025-01-19T23:46:50.3899559+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"905101787d1d0f73566701770552072e","SpanId":"c4877c32cff0dc83","Properties":{"ElapsedMilliseconds":56.0884,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000035","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5062459+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5132561+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5194259+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5215168+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5234540+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5272905+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.5272717Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5321635+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5374491+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.5374289Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5389088+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5404432+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":13.7833,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5419301+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.5441732+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":31.4927,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000037","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"31.4927"}]}}
{"Timestamp":"2025-01-19T23:46:50.5470670+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"fb1b33f87728961e32e49ddafa64041d","SpanId":"f7f649bb366df5c6","Properties":{"ElapsedMilliseconds":40.848,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000037","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.6822232+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.6880306+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.6917641+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.6939809+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.6968255+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7013468+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.7013255Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7064345+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7123410+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.7123244Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7162663+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7179644+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":17.2055,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7206883+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.7227989+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":35.1586,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000039","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"35.1586"}]}}
{"Timestamp":"2025-01-19T23:46:50.7263225+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"33a1afffa2e08d50aae7e209a9f0ef13","SpanId":"0f5343b37cc982cb","Properties":{"ElapsedMilliseconds":44.1567,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000039","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8553462+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8598418+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8651209+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8672974+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8707498+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8752502+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.8752308Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8805563+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8888756+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:50.8888531Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8916487+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8949168+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20.2933,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.8991501+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:50.9018632+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":42.5457,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000003B","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"42.5457"}]}}
{"Timestamp":"2025-01-19T23:46:50.9054688+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"4e3a78cf4eab4bd9923bdaac6a478ce6","SpanId":"9aeee71105d5d757","Properties":{"ElapsedMilliseconds":50.1681,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0313891+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0377130+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0402020+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0421377+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0440917+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0471647+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.0471504Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0506088+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0541220+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.0540939Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0568188+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0597893+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":13.2066,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0622243+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.0655984+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":28.3737,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000003D","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"28.3737"}]}}
{"Timestamp":"2025-01-19T23:46:51.0693679+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e88f1d4706adb2865eb8d42280b175dc","SpanId":"8f89bc94fd80fc27","Properties":{"ElapsedMilliseconds":38.0595,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2054336+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2116296+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2168166+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2196936+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2218948+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2260363+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.2260195Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2304573+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2370548+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.2370356Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2396674+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2423806+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":16.8943,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2463306+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.2490052+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":37.7167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000003F","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"37.7167"}]}}
{"Timestamp":"2025-01-19T23:46:51.2511389+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"9493416ebc3f27f9ee8e600b2b0e63fd","SpanId":"782be125fd907212","Properties":{"ElapsedMilliseconds":45.7416,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000003F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.3846413+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.3888096+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.3937873+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.3958176+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.3985748+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4035037+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.4034921Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4113154+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4173578+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.4173380Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4203267+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4235416+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":20.4055,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4270148+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.4295863+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":41.2627,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000041","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"41.2627"}]}}
{"Timestamp":"2025-01-19T23:46:51.4334934+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"6ec353dd6dfeaf7dcc9cec2a96103c62","SpanId":"15eb504ac60e81e3","Properties":{"ElapsedMilliseconds":48.8879,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000041","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5486474+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5543646+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5581743+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5601371+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5621163+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5654828+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.5654703Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5687501+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5733715+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.5733565Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5757720+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5785436+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":13.4356,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5821893+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.5843531+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":30.4451,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000043","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"30.4451"}]}}
{"Timestamp":"2025-01-19T23:46:51.5864531+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e1dcd0e5055f580798c87379c00d014b","SpanId":"505f0a6f48274c62","Properties":{"ElapsedMilliseconds":37.8347,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000043","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7084606+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7158925+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7186011+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7197007+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7206126+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7228871+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.7228775Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7271833+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7322241+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:51.7322030Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7340600+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7360161+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":13.441,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7374802+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:51.7394064+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":23.9806,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000045","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"23.9806"}]}}
{"Timestamp":"2025-01-19T23:46:51.7430200+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"479f417bae345775883e9aa2b2a4d669","SpanId":"71330a2b288912f2","Properties":{"ElapsedMilliseconds":34.5975,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000045","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.2895103+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.2946411+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.2977545+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3000556+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3014970+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3053692+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.3053550Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3136198+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3196608+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.3196451Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3227813+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3257465+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":22.1924,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3300339+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.3328670+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":38.6216,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000047","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"38.6216"}]}}
{"Timestamp":"2025-01-19T23:46:53.3363511+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"198c999008f5d8096b2b2ac5cc887400","SpanId":"571db8315d63c7fa","Properties":{"ElapsedMilliseconds":46.8398,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000047","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4619854+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4681067+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4708083+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4721957+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4738877+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4777774+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.4777673Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4831751+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4876777+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.4876704Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4896822+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4924622+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":15.1146,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4968512+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.4985525+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":30.857,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000049","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"30.8570"}]}}
{"Timestamp":"2025-01-19T23:46:53.5014710+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"727affbc1843cb5f275d738cc8fa92c4","SpanId":"c81dc7d1ae15160a","Properties":{"ElapsedMilliseconds":39.5211,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000049","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6301755+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6347646+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6393526+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6415339+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6435718+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6489607+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.6489496Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6535648+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6585134+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.6584993Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6612713+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6649453+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":16.3727,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6685890+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.6705149+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":36.06,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000004B","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"36.0600"}]}}
{"Timestamp":"2025-01-19T23:46:53.6739314+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"e80550256b1b6cfc194e2e7f5aca6556","SpanId":"c671363f5d0c564d","Properties":{"ElapsedMilliseconds":43.7728,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004B","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8107651+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8176524+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8236870+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8260180+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8281214+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8341044+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.8340956Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8388000+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8433948+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:53.8433832Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8457649+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8503372+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":16.5183,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8538380+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.8560463+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":38.9385,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000004D","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"38.9385"}]}}
{"Timestamp":"2025-01-19T23:46:53.8597454+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"f6b2d5fe24eceb8338abc6da4e0bbb1a","SpanId":"3804dc13b9ca13ce","Properties":{"ElapsedMilliseconds":49.0095,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004D","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:53.9948195+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0020960+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0067903+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0102056+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0124372+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0181098+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.0180989Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0225476+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0288884+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.0288778Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0315302+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0345011+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":16.8402,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0366235+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.0389636+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":37.2519,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:0000004F","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"37.2519"}]}}
{"Timestamp":"2025-01-19T23:46:54.0425867+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"fac746660bdaf42a896d71fd789312fb","SpanId":"ad156271c4ce50d0","Properties":{"ElapsedMilliseconds":47.782,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:0000004F","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1544668+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1592719+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1640002+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1673298+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1694001+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1746654+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.1746544Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1792621+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1861375+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.1861207Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1886785+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1914112+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":17.2403,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1942124+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.1977750+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":38.961,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000051","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"38.9610"}]}}
{"Timestamp":"2025-01-19T23:46:54.2017008+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"882283f92c59682cb8c024c5879c8422","SpanId":"387f184d28cea4f2","Properties":{"ElapsedMilliseconds":47.2597,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000051","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3167728+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3218363+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3251155+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3274378+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3296527+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3345326+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.3345185Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3391032+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"elapsed":"1","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3432580+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:46:54.3432492Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3463553+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bf3e51da-9a8c-44a1-8cca-d92b904b5163","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3506310+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":16.5795,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3533689+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:46:54.3551196+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":33.7283,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQATBEM3N:00000053","ConnectionId":"0HN9OQATBEM3N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"33.7283"}]}}
{"Timestamp":"2025-01-19T23:46:54.3585260+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"10e00623a9cc222affbbfd05236ae842","SpanId":"90719633faabf27d","Properties":{"ElapsedMilliseconds":41.7887,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQATBEM3N:00000053","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQATBEM3N"}}
{"Timestamp":"2025-01-19T23:55:26.7817132+02:00","Level":"Information","MessageTemplate":"User profile is available. Using '{FullName}' as key repository and Windows DPAPI to encrypt keys at rest.","Properties":{"FullName":"C:\\Users\\huawe\\AppData\\Local\\ASP.NET\\DataProtection-Keys","EventId":{"Id":63,"Name":"UsingProfileAsKeyRepositoryWithDPAPI"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"Timestamp":"2025-01-19T23:55:26.9376979+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"https://localhost:7017","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:55:26.9398239+02:00","Level":"Information","MessageTemplate":"Now listening on: {address}","Properties":{"address":"http://localhost:5215","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:55:26.9609802+02:00","Level":"Information","MessageTemplate":"Application started. Press Ctrl+C to shut down.","Properties":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:55:26.9627872+02:00","Level":"Information","MessageTemplate":"Hosting environment: {EnvName}","Properties":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:55:26.9662448+02:00","Level":"Information","MessageTemplate":"Content root path: {ContentRoot}","Properties":{"ContentRoot":"D:\\C# Projects\\Store\\Store.Api","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"Timestamp":"2025-01-19T23:55:31.1661842+02:00","Level":"Information","MessageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"Protocol":"HTTP/2","Method":"POST","ContentType":"application/json","ContentLength":93,"Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:31.2354967+02:00","Level":"Information","MessageTemplate":"Failed to validate the token.","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Exception":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException: IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(ReadOnlyMemory`1 encodedTokenMemory)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\r\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","Properties":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:31.2412328+02:00","Level":"Information","MessageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EncodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:31.2456438+02:00","Level":"Information","MessageTemplate":"Executing endpoint '{EndpointName}'","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:31.2648875+02:00","Level":"Information","MessageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"RouteData":"{action = \"Register\", controller = \"Auth\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(RegisterCommand)","Controller":"Store.Api.Controllers.AuthController","AssemblyName":"Store.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8531b518-053f-4608-aea9-d057e8df27c6","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:31.3566045+02:00","Level":"Information","MessageTemplate":"Processing Request {@RequestName}, {@DateTimeUtc}","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:55:31.3562553Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"8531b518-053f-4608-aea9-d057e8df27c6","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:32.9166020+02:00","Level":"Information","MessageTemplate":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"elapsed":"82","parameters":"@__ToLower_0='?' (Size = 50)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Users] AS [u]\r\n        WHERE [u].[IsDeleted] = CAST(0 AS bit) AND LOWER([u].[Email]) = @__ToLower_0) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8531b518-053f-4608-aea9-d057e8df27c6","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:32.9845354+02:00","Level":"Information","MessageTemplate":"Completed Request {@RequestName}, {@DateTimeUtc}","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"RequestName":"RegisterCommand","DateTimeUtc":"2025-01-19T21:55:32.9843802Z","SourceContext":"Store.Application.PipelineBehaviors.LoggingPipeLineBehavior","ActionId":"8531b518-053f-4608-aea9-d057e8df27c6","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:33.0018686+02:00","Level":"Information","MessageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"ObjectResultType":"BadRequestObjectResult","Type":"Store.Application.Responses.Response`1[[MediatR.Unit, MediatR.Contracts, Version=2.0.1.0, Culture=neutral, PublicKeyToken=bb9a41a5e8aaa7e2]]","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8531b518-053f-4608-aea9-d057e8df27c6","ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:33.0337065+02:00","Level":"Information","MessageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"ActionName":"Store.Api.Controllers.AuthController.Register (Store.Api)","ElapsedMilliseconds":1758.3571,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:33.0450458+02:00","Level":"Information","MessageTemplate":"Executed endpoint '{EndpointName}'","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"EndpointName":"Store.Api.Controllers.AuthController.Register (Store.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
{"Timestamp":"2025-01-19T23:55:33.0542448+02:00","Level":"Information","MessageTemplate":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"RequestMethod":"POST","RequestPath":"/api/auth/Register","StatusCode":400,"Elapsed":1852.1796,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware","RequestId":"0HN9OQFV3PK1N:00000001","ConnectionId":"0HN9OQFV3PK1N"},"Renderings":{"Elapsed":[{"Format":"0.0000","Rendering":"1852.1796"}]}}
{"Timestamp":"2025-01-19T23:55:33.0831484+02:00","Level":"Information","MessageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","TraceId":"0e9353b711c32ba9bde84898cd98264f","SpanId":"f350b74bdf636b21","Properties":{"ElapsedMilliseconds":1919.4414,"StatusCode":400,"ContentType":"application/json; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"POST","Scheme":"https","Host":"localhost:7017","PathBase":"","Path":"/api/auth/Register","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN9OQFV3PK1N:00000001","RequestPath":"/api/auth/Register","ConnectionId":"0HN9OQFV3PK1N"}}
